
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x),'diff(fn,y),'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x),'diff(fn,y),'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
ev(express(grad f),diff);
i:matrix([1],[0],[0]);
j:matrix([0],[1],[0]);
k:matrix([0],[0],[1]);
ev(mygrad(f),diff);
mymatgrad(fn):='diff(fn,x)*i+'diff(fn,y)*j+'diff(fn,z)*k;
mymatgrad(f);
ev(mymatgrad(f),diff);
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(express(grad f),diff);
load(vect);
ev(express(grad f),diff);
ev(express(grad (x*y^2-y*z)),diff);
ev(express(grad (x*y^2-y*z)),diff);
ev(express(curl (x*y^2-y*z)));
ev(express(curl (x,y^2,(-y)*z)));
ev(express(curl (x,2*y^2,3*z)));
ev(express(curl [x,2*y^2,3*z]));
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
f(x,y,z):=[5*x^2*y^7,3*sin(y)^2,exp(11*z)^3];
ev(express(mygrad(f)));
ev(express(mygrad(f(x,y,z))));
ev(express(curl f(x,y,z)));
ev(map(ev,mgl),diff);
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
ev(map(ev,mgl),diff);
ev(map(ev,f),diff);
ev(map(ev,f(x,y,z)),diff);
express(grad f(x,y,z));
save("/home/fraser/projects/Math/maxima/diy_vect_calc_101_fix.lisp",all);
stringout("/home/fraser/projects/Math/maxima/diy_vect_calc_101_fix_input.mac",input);
stringout("/home/fraser/projects/Math/maxima/diy_vect_calc_101_fix_funcs.mac",functions);
mgl:['diff(f,x,1),'diff(f,y,1),'diff(f,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
fex:[5*x^2*y^7,3*sin(y)^2,exp(11*z)^3];
express(mg1 . fex);
express(mgl . fex);
ev(ev(%),diff);
ev(%);
mgl:['diff(Fx,x,1),'diff(Fy,y,1),'diff(Fz,z,1)];
ev(map(ev,mgl),diff);
mgm:matrix([del/del(x)],[del/del(y)],[del/del(z)]);
mgm[1];
mgm[2];
mgm[3];
mygrad(fn):=['diff(fn,x)+'diff(fn,y)+'diff(fn,z)];
mygrad(x*y^2-y*z);
ev(%,diff);
mgl[1];
part(mgl,1,2);
part(mgl,1,3);
part(mgl,1,4);
part(mgl,1,2);
part(mgl,1,1);
part(mgl,1,0);
part(mgl,1,1);
subst(fex[1],part(mgl,1,1),mgl);
psubst(fex[1] = part(mgl,1,1),mgl);
psubst(fex[1],part(mgl,1,1),mgl);
part(mgl,2);
part(mgl,3);
psubst([fex[1],fex[2],fx[3]],[part(mgl,1,1),part(mgl,2,1),part(mgl,3,1)],mgl);
psubst([fex[1],part(mgl,1,1)],mgl);
psubst([fex[1]],[part(mgl,1,1)],mgl);
psubst(part(mgl,1,1) = fex[1],mgl);
psubst(part(mgl,1,1) = fex[1],part(mgl,2,1) = fex[2],part(mgl,3,1) = fex[3],mgl);
psubst([part(mgl,1,1) = fex[1],part(mgl,2,1) = fex[2],part(mgl,3,1) = fex[3]],mgl);
ev(%);
ev(ev(%),diff);
map("+",psubst([part(mgl,1,1) = fex[1],part(mgl,2,1) = fex[2],part(mgl,3,1) = fex[3]],mgl));
map("+",psubst([part(mgl,1,1) = fex[1],part(mgl,2,1) = fex[2],part(mgl,3,1) = fex[3]],mgl));
map("+",[3,4,5]);
map("+",%o122);
apply("+",%o122);
map(apply("+",%o122));
apply(map("+",%o122));
apply(map("+",[3,4,5]),11);
apply(map("+",[3,4,5]),[11]);
apply("*",map("+",[3,4,5]),11);
map("+",[3,4,5]);
apply("+",[3,4,5]);
map("*2",[3,4,5]);
apply(map("+",%o122));
apply("+",%o122);
ev(%,diff);
express(div f(x,y,z));
map(mgl[1],f(x,y,x));
ev(%,diff);
map(diff,f(x,y,x));
save("/home/fraser/projects/Math/maxima/diy_vect_calc_101_fix.lisp",all);
