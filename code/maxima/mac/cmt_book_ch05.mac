/* [wxMaxima: comment start ]
Modern Electromagnetics and Coupled Mode Theory Book
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
load(vect); load(eigen);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Modern Electrodynamics and Coupled Mode Theory
Chapter 5
Planar 3 Layer Dielectric Structure
Determine Complete Eigenfield Distributions
Derive Eigenvalue (Dispersion) Equations
Dealing with guided and radiative modes 

5.2 Closed Waveguide Without Losses and Perfect Conducting Metallic Boundary

Cental Arbitrary Waveguiding Medium 
Surrounding Isotropic Homogenous Medium with constant permittivity and permeability ε and μ
Outer Perfectly Conducting Boundary 

k_z = k_long = k[z]      longitudinal wave number
k_t = trns = k[t]          transverse wave number

The isotropic waveguiding medium satisfies this characteristic equation
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_101:[ k[t]=(k[x]^2+k[y]^2)/2,k^2=2*ε*μ, k^2=k[t]^2+k[z]^2    ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The laplacian here acts on the radius vector r[t] of points in the cross-section of the outer medium

cmt_ch05_101 
    results from substituting the phase exp(i(ωt-(k . r)) into the ordinary wave equation 
    the substitution converts it into the Helmholtz for the transverse fields

In fact r[t] is a vector but when using cylindrical/spherical coordinates x,y,z are parametric equations, not just scalar coordinates
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_102:[r[t]:[x,y,z],express(laplacian(f(r[t]))) + k[t]^2*f(r_t)=0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
f_hat(r[t]) 
    corresponds to any component of the EM field
    determines the total wave dependence of that component as follows:

   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_103:[f(r[t],z,t)=f(r[t])*exp(%i*(ω*t-k[z]*z))];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The modes in the outer medium (isotropic) is a function of the transverse wave number k[t]
if k[t]^2 is real and positive, the outer fields are components of volume modes
if k[t]^2 is real and negative, the outer fiels are compoents of surface modes
if k[t]^2 is complex the outer fields are components of complex (evanescent) modes

The system under study is now simplified 
The waveguide structure is now planar with ∂/∂x =iik[x] = 0 and k[t] = k[y]

At fixed frequency ω the nth eigenmode has the wavenumber
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
k[z,n](ω)=sqrt(ω^2*ε*μ - k[y,n](ω)^2 );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The frequency dependence of k[z,n](ω) for the outer medium results from the dispersion 
properties of the waveguide. These dispersion properties result from contributions from all media 
within the total waveguide structure.

The Helmholtz equation for the nth mode of a planar system has the following form:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_104:['diff(f_hat[n](y),y,2)+k[y,n](ω)^2*f_hat[n](y)=0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The solution of cmt_ch05_104 gives the transverse function
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_105:[f_hat[n](y,z,t)=A*exp(-%i*k[y,n]*y)+B[n]*exp(-%i*k[y,n]*y)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
5.2.1 Volume Modes

k[y,n](ω)^2 > 0
Real values of k[y,n](ω) only
Transverse distribution of the fields at constant z (z=C_real) consists of 2 waves
The 2 waves are travelling in opposite directions along the y axis
This describes the "transverse wave resonance" within the volume of the isotropic material.
This resonance is a result of the interference between the transverse forward and reverse waves 
The transverse waves are reflected from 2 boundaries
    1) The outer perfectly conducting surface 
    2) A boundary of the inner waveguide layer
A transverse standing wave pattern is typical for spatial resonance of this type.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_106:[f_hat[n](y,z,t)=An*exp(-%i*k[z,n]*z)*exp(%i*(ω*t-k[y,n]*y)) + B[n]*exp(-%i*(k[z,n]*z))*exp(%i*(ω*t-k[y,n]*y) ) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
When ω^2*ε*μ> k[y,n](ω)^2 the value of k[z,n] is real and takes on the role of the phase constant β[n](ω)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_107:[k[z,n]=sqrt(ω^2*ε*μ-k[y,n](ω)^2), k[z,n]=β[n](ω)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Then equation cmt_ch05_106 takes the form 
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_106:[f_hat[n](y,z,t)=f_hat[n](y)*exp(%i*(ω*t-β[n]*z)), f_hat[n](y)=(A[n]*exp(-%i*k[y,n]*y) + B[n]*exp(-%i*(k[y,n]*y)))*exp(%i*(ω*t-β[n]*z)) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The wave factor at the end of cmt_ch05_106 is the volume mode propagating with phase velocity given by
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_107:[v[ph,n](ω) =ω/β[n](ω), v[ph,n](ω)=c/sqrt(1-(k[y,n](ω)*c/ω)^2)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The equation in cmt_ch05_107 indicates that the moving volume modes are always fast, meaning that:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_108:[v[ph,n]>c, v[ph,n] =1/sqrt(ε*μ)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The group velocity of the nth volume mode is given by:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_109:[v[gr,n](ω)=1/('diff(β[n](ω),ω)), v[gr,n]=c*(β[n](ω)/((ω/c)-k[y,n](ω) *c* 'diff(k[y,n](ω),ω))) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The condition v[gr,n] <=c results in the following restriction on the frequency dependence of 
the transverse wave number in the outer (isotropic) medium
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5212:['diff(k[y,n](ω),ω)<= ( ((ω/c)-β[n](ω)) /(k[y,n](ω)*c))];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
When ω^2*ε*μ < k[y,n](ω)^2 k[z,n](ω) is purely imaginary.
This transforms the phase constant β[n] into an amplitude decay constant α[n]:
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5213:[k[z,n](ω) = -%i*sqrt(k[y,n](ω)^2-ω^2*ε*μ), k[z,n](ω)=-%i*α[n](ω)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
This causes amplitude decay in the previous  direction of phase propagation.
The amplitude decay is denoted by a minus sign

α[n] > 0 for β[n] > 0, giving:

Given purely real values of α[N] the equation below describes the evanescent mode
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5214:[f_hat[n](y,z,t)=A[n]*exp(-α[n])*exp(%i*(ω*t-k[y,n]*y))+B[n]*exp(-α[n]*z)*exp(%i*(ω*t+k[y,n]*y)) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Any volume mode turning into an evanescent mode stops propagating it's phase 
The mode decays in amplitude as it travels in the z direction: exp(-α[n]*z) 

The evanescent modes correspond to the cutoff or stop band of a screened waveguide.
The passband corresponds to the locations where active modes with real-valued β[n] exist 
Any volume mode turning into an evanescent mode stops propagating it's phase 
The mode decays in amplitude as it travels in the z direction: exp(-α[n]*z) 

The evanescent modes correspond to the cutoff or stop band of a screened waveguide.
The passband corresponds to the locations where active modes with real-valued β[n] exist 

The transition between pass and stop bands matches the cutoff frequency ω[n,c]. 
The following constraints are imposed on the longitudinal and transverse wave numbers

   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5215:[β[n](ω[n,c])=0, k[y,n](ω[n,c])=ω[n,c]/c];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5216:[v[ph,n,c] = v[ph,n](ω[n,c],v[ph,n,c]=inf )];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
On the ω-β graph (Fig 5.2) the cutoff points are located along the ω axis
The  cutoff points are ω=ω[c,n] and β[n]=0
These are the extreme ends of the mode dispersion curve.
At these points ∂ω/∂β[n] = 0 because v[gr,n,c] = 0
v[gr,n,c] = 0 only if 
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5217:[ ω=ω[n,c], 'diff(k[y,n](ω),ω) # 1/c ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Or else  v[gr,n,c] is indeterminate (0/0) at the cutoff frequency given by (5.2.15) so that v[grn,ln,c] ≠ 0
The fields of the nth mode in the outer medium at it's cutoff frequency ω[n,c] propagate along the y axis (transverse)
as a plane wave with dispersion relation k[y,c]^2 = -abs(k[y,n](ω))^2 < 0

When the reflecting metallic screen is moved out to x=∞ and y = ∞ the volume modes turn into radiating modes in an open
waveguide system. Propagating and evanescent modes become radiating modes when the metal screen is removed.

Further details will be added later - only equations will be entered for now.
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
5.2.2 Surface Modes
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5218:[ k[y,n](ω) ^2    =-abs(k[y,n](ω))^2, k[y,n](ω) < 0, k[y,n](ω)=-%i*abs(k[y,n](ω)) ,k[z,n](ω)=sqrt(ω^2*ε*μ+'abs(k[y,n](ω))^2), k[z,n](ω)=β[n](ω) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Equation (5.2.18) gives these equations for the phase and group velocities of the nth surface mode (5.2.10 and 5.2.11)
Equation (5.2.19) shows that the surface modes are always slow (v[ph,n]  < c). The volume modes are fast v[ph,n]>c
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5219:[v[ph,n](ω)=ω/β[n](ω), v[ph,n](ω)=c/sqrt(1+('abs(k[y,n](ω)) *c/ω)^2)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5220:[ v[ph,n] < c, v[ph,n] < 1/sqrt(ε*μ),v[gr,n](ω)=1/'diff(β[n](ω),ω), v[gr,n](ω)=c*(β[n]/((ω/c) +abs(k[y,n](ω))*c * 'diff(abs(k[y,n](ω)) ,ω))) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5221:[v[ph,n] ≤ c, 'diff(abs(k[y,n](ω)),ω) ≥ ((β[n](ω) - (ω/c))/(abs(k[y,n](ω))*c)) , 'diff(abs(k[y,n](ω)),ω) > 0  ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
For surface modes (5.2.3) and (5.2.6) give the following formulae for any part of the EM field
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5222:[f[n](y,z,t)=f[n](y)*exp(%i*(ω*t-β[n]*z)),f[n](y,z,t)=(A[n]*exp(-abs(k[y,n])*y) +B[n]*exp(abs(k[y,n])*y))*exp(%i*(ω*t-β[n]*z)) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Transition occurs between surface and volume mode regimes at cutoff frequency ω[n,c]
The transverse and longitudinal wave numbers have the following contraints
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5223:[k[y,n](ω[n,c]) = 0, β[n](ω[n,c])=ω[n,c]/c];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The group and phase velocities are always equal to c in the outer isotropic material
The phase and group velocities at the cutoff frequency are always
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5224:[v[ph,n,c]=v[ph,n](ω[n,c]), v[ph,n,c] = c, v[gr,n,c] = v[gr,n](ω[n,c]),v[gr,n,c] =c ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Complex Modes

Complex modes occur when k[y](ω)^2 becomes complex, making transverse and longitudinal modes complex as well.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
Re(n):=realpart(n); Im(n):=imagpart(n);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5225:[k[y]='Re(k[y]) + %i*im(k[y])  , k[x]='Re(k[x]) + %i*'Im(k[x])];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Modal fields are localized near the surface according to exp(-Im(k[y,n]*y))
The fields decrease in amplitude with distance from the surface
The transverse propagation differs from that of surface modes according to exp(%i*(ω*t-Re(k[n,y]*y)))
Wavenumbers are interdependent.
Substitution of them into (5.2.1) gives equations for Re(k[y]) and Im(k[y])
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5226:[('Re(k[y])^2-'Im(k[y])^2=K^2) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5227:['Re(k[y])*'im(k[y])=α*β];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Phase constant α and β are defined in order to define the longitudinal propagation constant
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5228:[α=-'Im(k[z]), β='Re(k[z]), γ=α+%i*β, γ=-'Im(k[z])+%i*'Re(k[z]), γ=%i*k[z]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5229:[K^2=k^2+α^2-β^2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Equations (5.2.26) and (5.2.27) define hyperbolic functions plotted in Fig 5.3
There are 2 cases shown by 5.3 (a) and 5.3 (b)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5230:[K^2>0, β^2 < k^2 + α^2,(v[ph]/c)^2 > 1/(1 + (α/k)^2)];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5231:[K^2>0, β^2 > k^2 + α^2, (v[ph]/c)^2=1/(1+(α/k)^2) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
TODO: GENERATE OR INCLUDE FIGURE 5.3 IN THIS DOCUMENT

Fig 5.3(a) gives 2 solutions at points K and -K that correspond to the fast volume modes.
For maxima the 2 cases are given as separate list entries because ± was not accepted.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5232:[β^2<k^2,α=0, k[y]='Re(k[y]), k[y]=K(αlpha), k[y]=-K(αlpha),k[y]=-sqrt(k^2-β^2),k[y]=sqrt(k^2-β^2) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Fig 5.3(b) gives 2 solutions at points |K| and -|K| that correspond to the slow surface modes 
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5232:[β^2>k^2,α=0, k[y]=%i*'Im(k[y]), k[y]=%i*K(αlpha), k[y]=-%i*K(αlpha),k[y]=%i*sqrt(k^2-β^2),k[y]=-%i*sqrt(k^2-β^2) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The 4 roots of (5.2.26) and (5.2.27) combine to give 2 pairs 1-1_bar and 2-2_bar.
These root pairs correspond to the twin-conjugate modes (Section 3.3.2)
Twin conjugate modes do not have self-power (P[n]=P[n_hat]=0 )
but together carry the pair-cross power P_pair[n,n_hat] defined by equation (3.3.23)

To arrange these system properties use the following relationship 
between the longitudinal propagation constants typical of the twin-conjugate modes
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_34:[γ[n_bar]=-'conjugate(γ[n]), k[z,n_bar]='conjugate(k[z,n])];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
This implies that
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5235:[α[n_bar]=-'Im(k[z,n_bar]),a[n_bar]='Im(k[z,n_nar]), α[n_bar]=-α[n], β[n_bar]='Re(k[z,n_bar]), β[n_bar]='Re(k[z,n]), β[n_bar]=β[n] ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
If point 1 or 2 (where αβ>0) is identified with mode n then point 1_bar or 2_bar (αβ<0) will be identified with the twin mode n_bar where:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5236:['Re(k[y,n_bar])=-'Re(K[y,n]),'Im(k[y,n_bar])='Im(k[y,n]) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
which implies that
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5237:[k[y,n_bar]=-'conjugate(k[y,n])];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Both modes of a twin pair have the same Im(k[y]) following from (5.2.36).
Both modes have the same propagation constant (β[n_bar]=β[n] but the amplitude (decay) constants have opposite signs (α[n]=-α[n_bar])

Evanescent modes have no propagation of phase (β[n]=0) but α[n]=-α[n_bar]
The complex and evanescent modes are reactive modes due to reactive decay in space. 

The complex and evanescent modes store reactive energy without an active self-power flow
This guarantees that the 2 modes belong to a common sheet of Rieman surface for the function k[y](k[z])=sqrt(k^2-k[z])^2)

For further details see Appendix H)

(5.2.4) Mode Excitation By External Sources

Source region centered about z=0, width -z0 ⟶ z0
Active modes propagate left and right out of the source region without decaying in amplitude.
Reactive modes (complex and evanescent) decay according to exp(|α[-m]|(z+z_0))
The distribution of the mode excitations in the source region by external sources gives the following equations for 
the excitation amplitudes A[m] and A[-m] of the forward and backward active and reactive modes 

For the forward modes
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5238:[+m > 0, if z < -z[0] then A[+m](z)=0,if -z[0]< z and z < z[0] then A[+m](z) # 0, if z > z[0] then A[+m](z)=C];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
For the backward modes
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5239:[-m < 0, if z >z[0] then A[-m](z)=0,if -z[0]< z and z < z[0] then A[-m](z) # 0, if z <-z[0] then A[-m](z)=C];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The restrictions A[+m](z<-z[0]) = 0 or A[-m](z>z[0]) = 0 implies that:
    The forward modes can be excited and driven only to the right of the source region
    The backward modes can be excited and driven only to the left of the source region

The input amplitude A[+m](-z[0]) at the left end of the source region 
        and 
The input amplitude A[-m](z[0]) at the right end of the source region

are given as the boundary conditions, written in the following form:

(i) at the left end z = -z[0] for the forward mode, active with v[gr,+m] >0 and reactive with α[+m] > 0
Driven Mode:        A[+m](-z[0]) ≠ 0
Undriven Mode:    A[+m](-z[0]) = 0
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5240:[A[+m](-z[0]) # 0 or A[+m](-z[0]) = 0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
(ii) z = z[0] at the right end for the backward mode, active with v[gr,-m] < 0, reactive with α[-m]<0
Driven Mode:         A[-m](z[0] ≠ 0
Undriven Mode:     A[-m](z[0]) = 0
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch105_5241:[A[-m](z[0]) # 0 or A[-m](z[0]) = 0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Use equation (3.5.13) to find the excitation Amplitude A[n](z)
Re-write (3.5.13) for the source region with bulk exciting currents J[b,e,m] 
and effective surface currents J[s,eff,e,m]  = J[s,e,m]


L[b] is the a contour bounding Surface S[b] that is occupied by the bulk currents
For the active modes (forward and backward with subscript n = ±m)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5242:['diff(A[n](z),z)=(1/N[n]) * 'integrate(((J[b,e] . 'conjugate(E[n])) + (J[b,m] . 'conjugate(H[n]))) ,S[b],1,N) - (1/N[n])*'integrate(((J[s,e] . 'conjugate(E[n]))+(J[s,m]*'conugate(H[n]))),L[b],1,N)];
/* [wxMaxima: input   end   ] */
/* [wxMaxima: question  start ] */
<math><st>Is </st><munder><mrow><mi>J</mi></mrow><mrow><mi>b</mi><mi>,</mi><mi>m</mi></mrow></munder><mi> . </mi><mrow><cj><munder><mrow><mi>H</mi></mrow><mrow><mi>n</mi></mrow></munder></cj></mrow><mi>+</mi><munder><mrow><mi>J</mi></mrow><mrow><mi>b</mi><mi>,</mi><mi>e</mi></mrow></munder><mi> . </mi><mrow><cj><munder><mrow><mi>E</mi></mrow><mrow><mi>n</mi></mrow></munder></cj></mrow><st> positive, negative or zero?</st></math>
/* [wxMaxima: question  end   ] */
/* [wxMaxima: answer  start ] */
positive;
/* [wxMaxima: answer  end   ] */


/* [wxMaxima: comment start ]
For the reactive modes (forward and backward with subscript n = +/- m and n[bar]=-/+m)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5343:['diff(A[n](z),z)=1/N[n[bar]]*'integrate(( (J[b,e] . 'conjugate(E[n[bar]])) + (J[b,m] . 'conjugate(H[n[bar]]))) ,S[b],1,N)- (1/N[n[bar]])*'integrate(((J[s,e] . 'conjugate(E[n[bar]]))+(J[s,m]*'conugate(H[n[bar]]))),L[b],1,N) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The morns of the active and reactive modes are defined in using the form of Eqs (3.3.15) and (3.3.20)
TODO: EDIT 44 AND 45 AND CONTINUE
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5244[N[n]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5245:[N[n[bar]]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5246:[
        E_n(r_t,z) = E_hat_n(r_t) * exp(-γ_n* z),
        H_n(r_t,z) = H_hat_n(r_t) * exp(-γ_n* z)
    ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
For the active modes (forward and backward with subscript n = ±m):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5247:[

A_plus_m(z_0) = A_plus_m (-z_0) - (1/N_plus_m) * 'integrate(J_b_e . conjugate(E_plus_m) + (J_b_m . conjugate(H_plus_m)),V_b,1,N)
                            - (1/N_plus_m) * 'integrate( (J_s_e . conjugate(E_plus_m)) + (J_s_m . conjugate(H_plus_m)) , S_b_i, 1,N )
                                
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
For the reactive modes (forward and backware with subscript n = ±m and n_bar = minus/plus m):
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5248:[
    A_minus_m(-z_0) = A_minus_m (z_0) - (1/N_minus_m) * 'integrate(J_b_e . conjugate(E_minus_m) + (J_b_m . conjugate(H_minus_m)),V_b,1,N)
                            - (1/M_minus_m) * 'integrate( (J_s_e . conjugate(E_minus_m)) + (J_s_m . conjugate(H_minus_m)) , S_b_i, 1,N )

];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5249:[
    A_plus_m(z_0) = A_plus_m (-z_0) - (1/N_minus_m) * 'integrate(J_b_e . conjugate(E_minus_m) + (J_b_m . conjugate(H_minus_m)),V_b,1,N)
                            - (1/M_minus_m) * 'integrate( (J_s_e . conjugate(E_minus_m)) + (J_s_m . conjugate(H_minus_m)) , S_b_i, 1,N )
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5250:[
    A_minus_m(-z_0) = A_minus_m (z_0) - (1/N_plus_m) * 'integrate(J_b_e . conjugate(E_plus_m) + (J_b_m . conjugate(H_plus_m)),V_b,1,N)
                            - (1/M_plus_m) * 'integrate( (J_s_e . conjugate(E_plus_m)) + (J_s_m . conjugate(H_plus_m)) , S_b_i, 1,N )
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
cmt_ch05_5251:[ ∫_Vs (...) ∂V = ∫_{-z0,z0} ∂z * ∫_Sb (..)∂S]
cmt_ch05_5251:[ ∫_S_bi (...) ∂S = ∫_{-z0,z0} ∂z * ∫_Lb (..)∂l]
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5253:[
    f_plus_m(y,z,t) = A_plus_m(z_0) * f_hat(y)  * exp(-%i*ω*t  - (γ__plus_m*(z-z_0)))
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
E_hat_n(y) := [E_hn_x, E_hn_y, E_hn_z];
A_n(z) :=  [A_n_x, A_n_y, A_n_z];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5254:[
    E(y,z) = E_a(y,z) + E_b(y,z), 
    E(y,z) = 'sum(A_n(z)*E_hat_n(y)*exp(-γ_n * z)-(e_z/(%i*ω*ε))*J_bz_e(y,z) ,n,1,N ) 
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5255:[
    H(y,z) = H_a(y,z) + H_b(y,z),
    H(y,z) = 'sum(A_n(z) * H_hat_n(y) * exp(-γ_n*z) - (e_z/(%i*ω*μ)) * J_bz_m(y,z),n,1,N)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5256:[

E_b = (1/(%i*ω*ε)) * J_bz_e , H_b = (1/(%i*ω*μ))* J_bz_m];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_531:[
    limit('integrate(abs(f_guid(x,y,z))^2,S,1,N) , N, inf) <= C,
       C < inf
];

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
|f_guid(x,y,z) ⟶ 0 as |y| ⟶ ∞

TODO: express this in actual maxima code
TODO: check limits of integration where the book uses S, or C, or V instead of dxdy, etc
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_532:[
    limit(abs(f_guid(x,y,z)), N, 0)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_533:[
    f_rad(y,z) = (1/(2*%pi)) * 'integrate(f_bar_y(k_y,z)*exp(-%i*k_y*y) ,k_y, 1,N )
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_534:[
    f_y(y,z,k_y) = (1/(2*%pi) ) * f_bar_y(k_y,z) * exp(-%i*k_y*y)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The limit of |y| as y ⟶ ∞ is ∞ but maxima syntax won't allow an explicit notation for this
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_535:[
    if 'limit(abs(y), y, 0) then (abs(f_y(y,z,k_y) ) <= C, C< inf, abs(y)) 
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_536:[
   if 'limit('abs(y), y, 0) then 'limit(abs(f_rad(y,z)), y,0) = 0
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_537:[
    abs(f(y,z)) = abs(f_guid(y,z) + f_rad(y,z)),
    if 'limit(abs(y),y,inf)  then  'limit(abs(f(y,z)) = abs(f_guid(y,z) + f_rad(y,z)),y,inf)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
5.3.2   Spectral Representation of Fields In Open Waveguiding Structures
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_538:[
    f(x,y)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_539:[
    f_z(y,z,k_z) = (1/(2*%pi))  * f_bar_z(y,k_z) * exp(-%i*k_z * z)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5310:[

    f(y,z) = (1/(2*%pi)) * 'integrate( ((s(_k_z) * exp(-%i*k_z*z_0))/D(ω,k_z)) * exp(-%i*k_y*y) * exp(-%i*k_z*(z-z_0)), C_v, 1,N)
    
    ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5311:[
f_bar_z(y,k_z) = (s(ω,k_z) / D(ω,k_z)) * exp(-%i*k_y*y) ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5312:[ 
            f_z(y,z,k_z) = (1/(2*%pi)) * (s(ω,k_z) / D(ω,k_z)) * exp(-%i*k_y*y + k_z*z) 
     ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
D(ω,k_z) is a dispersion function of the source-free (homogenous) boundary value problem
It's zeros are roots of the dispersion equation
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5313:[
    D(ω,k_z) = 0
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5314:[
    k_y(k_z) := sqrt(k^2 - k_z^2),
    k_y(k_z) := sqrt(ω^2 *ε*μ - k_z^2)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5315:(
    declare(k_y, complex),
    k_y:5 + %i*7,
    carg(k_y),
imagpart(k_y) < 0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
Fill in math for Fourier contour over a Rieman surface as given on page 292 of 
"Modern Electrodynamics and Coupled Mode Theory" by Barybin and Dmitriev
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5316:[
    k = k_d1 - %i * k_d2,
    C_1 =C_d1_1 + C_d2_1,
    C_2 = C_d1_2 + C_d2_2,
    C_Σ = C_d1_J  - C_d2_1 - C_d1_1 - C_ε  - C_d_2 - C_d2_2 - C_d2_J,
    'integrate( C_F,k_z,1,N) + 'integrate(C_K, k_z,1,N) + 'integrate(C_ε, k_z,0,2*%pi)
        + 'integrate( C_1,k_z,1,N) + 'integrate( C_2,k_z,1,N) 
        + sum('integrate(C_k,z_k,0,2*%pi),n,1,N)
        = 0
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5317:[
limit('integrate(f_z(y,z,k_z)  ,k_z, 1,N) ,C_J,0) = 0
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5318:[
        limit('integrate(f_z(y,z,k_z)  ,k_z, 1,N) ,C_ε,0)    
    ]
;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5319:[
    f(y,z) = (1/(2*%pi)) * 'integrate( (s_minus(ω,k_z)/D(ω,k_z)) * exp(-%i*k_y) * exp(-%i*(z-z_0)), k_z, 1,N),
    f(y,z) =    2*%pi * %i* 'sum(Res(f_z(y,z,k_z_a)) , k_z_a,1,N) 
                    -
                    2*%pi*%i*'sum(Res(f_z(y,z,k_z_r)), k_z_r,1,N) 
                    -
                    'integrate(f_z(y,z,k_z), k_z,1,N) - 'integrate(f_z(y,z,k_z), k_z,1,N)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
    kill(k_y);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5320:[
    -'integrate(f_z(y,z,k_z),k_z,1,C_1 ) = -'integrate(f_z(y,z,k_z)*(k_y/k_z), k_z, minf,0),
    -'integrate(f_z(y,z,k_z),k_z,1,C_1 ) =  'integrate(f_y( y,z,k_y) , k_y, minf,0)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5321:[
    -integrate(f_z(y,z,k_z),C_2,1,N)  = 'integrate(f_z(y,z,k_z) * (k_y/k_z) , k_y,0,minf),
    -integrate(f_z(y,z,k_z),C_2,1,N)  = 'integrate(f_y(y,z,k_y),d_k,0,inf)
    
    ];
/* [wxMaxima: input   end   ] */
/* [wxMaxima: question  start ] */
<math><st>Is </st><fn><munder altCopy="f_y"><mrow><mi>f</mi></mrow><mrow><mi>y</mi></mrow></munder><mrow><p><mi>y</mi><mo>,</mo><mi>z</mi><mo>,</mo><munder altCopy="k_y"><mrow><mi>k</mi></mrow><mrow><mi>y</mi></mrow></munder></p></mrow></fn><st> positive, negative or zero?</st></math>
/* [wxMaxima: question  end   ] */
/* [wxMaxima: answer  start ] */
positive;
/* [wxMaxima: answer  end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5322:[
    f_y(y,z,k_y) = f_z(y,z,k_z) * (k_y/k_z)
    ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5323:[
    f(y,z) = fguide_a(y,z) + f_guide_r(y,z)  + f_rad(y,z)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5324:[
    f_guide_a(y,z) = -2 * %pi*%i * 'sum(Res(f_z(y,z,k_z_a)),k_z_a, 1,N)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5324:[
    f_guide_a(y,z) = -2*%pi*%i * 'sum(Res(F_z(y,z,k_z_a)),k_z_r,1,N )
]
;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5325:[
    f_guide_r(y,z) = -2 * %pi*%i *'sum(Res(f_z(y,z,k_z_r)),k_z_r,1,N )
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5326:[
    f_rad(y,z) = 'integrate(f_y(y,z,k_y) , k_y, minf,inf),
    f_rad(y,z) = (1/(2*%pi)) * 'integrate(f_hat_y(k_y,z) *exp(-%i*k_y * y), k_y, minf,inf)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5327:[
    f_hat_y(k_y,z)  * exp(-%i*k_y*y) = f_hat_z(y,k_z) * (k_y/k_z) * exp(-%i*k_z * z)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
5.3.3   Radiation field of open waveguiding structures
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5328:[

    f_rad(y,z) = (1/(2*pi)) * 'integrate( f_hat_y(k_y,z) * exp(-%i*k_*y) ,k_y , minf,inf),
    f_rad(y,z) = (1/(2*pi)) * 'integrate(F_k_z* (k_y/k_z) * exp(-%i*(k_y*y + k_z*z)), k_y,minf,inf)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5329:[
    F(k_z) = f_hat_z(y,k_z) * exp(%i*k_y*y) ,
     F(k_z) = s(ω,k_z) / D(m,k_z)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5330:[
    k_z = sqrt(k^2 - k_y^2) ,
    k_z = sqrt(ω^2*ε*μ - k_y^2) ,
    k_z= β

];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5331:[
    k_z = -%i* sqrt(k_y^2 - k^2) ,
    k_z = -%i * sqrt(k_y_2 - ω^2 * ε*μ),
     k_z = -%i* α
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5332:[
f_rad(y,z) = f_rad_a(y,z) + f_rad_R(y,z) ,
    r_rad(y,z) = f_rad_pr(y,z) + f_rad_ev(y,z)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5333:[
    f_rad_a(y,z) = f_rad_pr(y,z) ,
    f_rad(y,z) = (1/(2*%pi)) * 'integrate(f_bar_y(k_y,z) * exp(-%i*k_y*y), k_y,-k,k),
    f_rad(y,z) = 'integrate(f_y(y,z ,k_y) , k_y,-k,k)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5334:[
    f_rad_r(y,z) = f_rad_cν(y,z) ,
    f_rad_r(y,z) = (1/(2*%pi)) * 'integrate(f_bar_y(k_y,z) * exp(-%i*k_y*y) , k_y, minf,-k)
                            + 
                            (1/(2*%pi))* 'integrate(f_bar_y(k_y,z) * exp(-%i*k_y*y), k_y, k,inf),
    f_rad_r(y,z) = 'integrate(f_y(y,z,k_y),k_y,minf,-k) + 'integrate(f_y(y,z,k_y),k_y,k,inf)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5335:[
    f_rad_a(y,z) = f_rad_pr(y,z),
    f_rad_a(y,z) = 'integrate( f_y(y,z,k_y) ,k_y, -k,0) 
                        +
                        'integrate(f_y(y,z,k_y),k_y,0,k),
    f_rad_a(y,z) = -1 * 'integrate( f_z(y,z,k_z) , k_z, 0, C_1)
                                -
                            'integrate(f_z(y,z,k_z) ,k_z, 0,C_2)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5336:[    
    f_rad_r(y,z) = f_rad_eν(y,z),
    f_rad_r(y,z) = 'integrate( f_y(y,z,k_y) ,k_y, minf,-k) 
                        +
                        'integrate(f_y(y,z,k_y),k_y,k,inf),
    f_rad_a(y,z) = -1 * 'integrate( f_z(y,z,k_z) , k_z, 0, C_dbl_primed_1)
                                    -
                                    'integrate(f_z(y,z,k_z) ,k_z, 0,C_dbl_primed_2)
    ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5337:[
    f_rad(y,z) = f_rad_pr(y,z),
    f_rad(y,z) = (1/(2*%pi)) * 'integrate(f_bar_y(k_y,z) * exp(-%i*k_y*y), k_y,-k,k),
    f_rad(y,z) = (1/(2*%pi)) * 'integrate(F(k_z) * (k_y/k_z) * exp(-%i*(k_y*y + k_z+z)) , k_y, -k,k)

];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5338:[
    y = r* cos(θ) , z = r * sin(θ)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5339:[
    k_y = k * cos(w) , k_z = k * sin(w) 
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
NOTE: O(n^N) means there is a finite series after the (w-θ)^2/2 term
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5340:[
    f_rad_pr(r,θ) = (1/(2*%pi))*'integrate( F(k*sin(w)) * k*cos(w) * exp(-%i*k*r*cos(w-θ)) ,w, 0,π  )  ,
    cos(w-θ) = 1 - (1/2) *  (w-θ)^2 + O(n^N)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */

/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5341:[
         f_rad_pr(r,θ) = ( (k*cos(θ)) / (2*%pi)) * F(k*sin(θ)) * exp(-%i*k*r) * 'integrate( exp(%i*k*r * (w-θ)^2/2) ,w,0,%pi)  ,
        f_rad_pr(r,θ) = ((k*cos(θ)) / (2*sqrt(%pi))) * F(k*sin(θ)) * (
        'integrate(exp(%i*%pi*t^2/2) , t, 0 , u_1) + 'integrate(exp(%i*%pi*t^2), t, 0, u_2)
    )

]  ;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
where
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5342:[
    u_1 = sqrt((k*r)/%pi) * θ, u_2 = sqrt((k*r) / %pi) * (%pi-θ),
    C(u) = 'integrate(cos(%pi/2) * t^2 , t, 0, u),
    S(u) = 'integrate(sin(%pi/2) * t^2,t,0,u)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5343:[
    f_rad_pr(r,θ) = ((k*cos(θ))/(2*%pi)) * (exp(-%i*k*r)/sqrt(k*r)) * F(k*sin(θ)) * (C(u_1) + C(u_2) + %i*(S(u_1) + S(u_2)))
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The following is true as k*r ⟶ ∞
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5344:[
    f_rad_a(r,θ) = f_rad_pr(r,θ) , 
    f_rad_a(r,θ) = '((k*cos(θ)) /sqrt(2*%pi*k*r)) * F(k*sin(θ) * exp(-%i*(k*r-%pi/4)))
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5345:[
    F(k*sin(θ)) * k*cos(θ) = (s(ω,k*sin(θ)) / D(ω,k*sin(θ)) * k* cos(θ))
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5346:[
    f(y,z) = f_guid_a(y,z) + f_guid_r(y,z) + f_rad_a(y,z) + f_rad_r(y,z)
]
;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
STOPPED HERE
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5346:[
    f(y,z)=f_guid_a(y,z)+f_guid_r(y,z)+f_rad_a(y,z) + f_rad_r(y,z) 
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
5.3.4   Mode Excitation By External Sources

NOTE: These functions are not yet correct - they provide vectors to the cross product but are incomplete
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
E_hat(y,k_y) := ([1,0,0]  + y * [0,1,0] + [0,0,1]) * k_y;
H_hat(y,k_y) := ([1,0,0]  + y * [0,1,0] + [0,0,1]) * k_y;
E_hat_m(y) := ([1,0,0]  + y* [f(y,z) = 1,0] + [0,0,1]) ;
H_hat_n(y) := ([1,0,0]  + y* [0,1,0] + [0,0,1]) ;
H_hat_m(y) := ([1,0,0]  + y* [0,1,0] + [0,0,1]) ;
E_hat_a(y)  := ([1,0,0]  + y* [0,1,0] + [0,0,1]) ;
k_y:[0, k_y, 0];
k_y_prime:[0, k_p_y, 0];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
E_hat(y,k_y) := ([1,0,0]  + y * [0,1,0] + [0,0,1]) * k_y;
E_hat(y,k_y) := ([1,0,0]  + y * [0,1,0] + [0,0,1]) * k_y;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5347:[
     N(k_y,k_y_prime) = w * 'integrate(
            express(conjugate(E_hat(y,k_y))~H_hat(y,k_y_prime))+express(E_hat(y,k_y_prime)~conjugate(H_hat(y,k_y)))*e_z,y,minf,inf) 
];
/* [wxMaxima: input   end   ] */
/* [wxMaxima: question  start ] */
<math><st>Is </st><mrow list="true"><t listdelim="true">[</t><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><t listdelim="true">]</t></mrow><st> positive, negative or zero?</st></math>
/* [wxMaxima: question  end   ] */
/* [wxMaxima: answer  start ] */
zero;
/* [wxMaxima: answer  end   ] */
/* [wxMaxima: question  start ] */
<math><st>Is </st><mrow list="true"><t listdelim="true">[</t><mrow list="true"><t listdelim="true">[</t><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><t listdelim="true">]</t></mrow><mo>,</mo><mn>0</mn><mo>,</mo><mrow list="true"><t listdelim="true">[</t><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><t listdelim="true">]</t></mrow><t listdelim="true">]</t></mrow><st> positive, negative or zero?</st></math>
/* [wxMaxima: question  end   ] */
/* [wxMaxima: answer  start ] */
positive;
/* [wxMaxima: answer  end   ] */


/* [wxMaxima: input   start ] */
E_hat_m(y) := [E_hmy_x, E_hmy_y, E_hmy_z];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5348:[
    N_mn = w * 'integrate( (express(conjugate(E_hat_m(y)) ~ H_hat_n(y)) + express(E_hat_a(y) ~ conjugate(H_hat_m(y))) ) * e_z,y,minf,inf)
    ];
/* [wxMaxima: input   end   ] */
/* [wxMaxima: question  start ] */
<math><st>Is </st><mrow list="true"><t listdelim="true">[</t><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><t listdelim="true">]</t></mrow><st> positive, negative or zero?</st></math>
/* [wxMaxima: question  end   ] */
/* [wxMaxima: answer  start ] */
zero;
/* [wxMaxima: answer  end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5349:[
    E(y,z) = E_a(y,z) + E_b(y,z) , 
    E(y,z) = 'sum(A_n(z) * E_Hat_n(y) * exp(-γ_n* z),n,1,N)
];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cmt_ch05_5350:[
];
/* [wxMaxima: input   end   ] */



