/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 18.02.0 ] */
/* [wxMaxima: comment start ]
    Need functions to create variable and function entries 
    and place them in tables. 
    Also need tables for expressions, axioms, environment 
    i.e. givens, values, initial and boundary conditions
    Tracking and control of substitution and derivation of equations is needed
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
defstruct(var_info (name,value,latex));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
defstruct(fun_info (ftyp, name, args, body, latex));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
defstruct(var_table (count,vars));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
defstruct(fun_table (count, funs));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
ftyp is FUN for function, MAC for macro
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
vinfo_ch01:new(var_info);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vinfo_ch01@name:P_p1_s;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vinfo_ch01@value:0.0531;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vinfo_ch01@latex:[['math, "P_{\\scriptscriptstyle{[+1,s]}}"], ['text, "P_{[+1,s]}"]];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
assoc('math, vinfo_ch01@latex);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
assoc('text, vinfo_ch01@latex);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vtab_ch01:new(var_table);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vtab_ch01@vars:[vinfo_ch01];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vtab_ch01@count:1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z:new(fun_info);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z@ftyp:"FUN";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z@name:P_v;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z@args:[z];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z@body:"abs(w_v)*sum(p_m*abs(a_vm(z))^2,m,minf,inf)";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pv_z@latex:"P_\\nu(z) = \\left| \\omega_\\nu \\right| \\sum_{-\\infty}^{\\infty} p_{\\scriptscriptstyle{-}} \\left| a_{\\scriptscriptstyle{-\\nu}} (z)\\right|^2";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ftab_ch01:new(fun_table);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ftab_ch01@count:1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ftab_ch01@funs:[finfo_Pv_z];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z:new(fun_info);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z@ftyp:"FUN";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z@name:P_dz;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z@args:[z];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z@body:"diff(sum(q_v*p_m*abs(a_vm(z))^2,m,minf,inf),z)";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
finfo_Pdz_z@latex:"P_{\\scriptscriptstyle{dz}}(z)=\\frac{\\partial}{\\partial{z}} \\sum_{m=-\\infty}^{\\infty} ~ q_\\nu ~ p_{\\scriptscriptstyle{-}} \\left| a_{-\\nu} (z) \\right|^2";
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The test functions defined here are for:
    lemma_1242_B:P_v(z):=abs(w_v)*sum(p_m*abs(a_vm(z))^2,m,minf,inf);

    lemma_1243:P_dz(z):='diff(sum(q_v*p_m*abs(a_vm(z))^2,m,minf,inf),z);
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]

Use of string_eval to create a macro from a string of maxima code

TODO:
The string evaluates and produces a macro expansion
But it is creating a missing end of line
The script needs another semicolon somewhere in this section

mps:"mprint([x]) ::= buildq([u:x] , if (debuglevel>3) then print (splice (u)));";
eval_string(mps);
mprint ("matrix is", mat, "with length", length(mat));
mat:matrix([1,2,3],[4,5,6],[7,8,9])


length(mat) does not evaluate here

mprint ("matrix is", mat, "with length", length(mat));


length(mat) does alone evaluate here

length(mat);
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
mshow ([l]) ::= block ([ans:[], n:length(l)],
    for i:1 thru n do
        (ans: append (ans, buildq ([u: l[i]], ['u, "=", u])),
        if i < n then
            ans: append (ans, if i < n-1 then [","] else [", and"])),
    buildq ([u:ans], print (splice(u))));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
foo (x,y,z) := mshow (x, y, z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
foo(1,2,3)$
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 18.02.0"$
