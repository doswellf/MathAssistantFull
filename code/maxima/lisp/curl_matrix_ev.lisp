;;; -*- Mode: LISP; package:maxima; syntax:common-lisp; -*- 
(in-package :maxima)
(DSKSETQ $%I1
         '((MSETQ) $CM
           (($MATRIX) ((MLIST) 0. |$Dz| |$Dy|)
            ((MLIST) |$Dy| 0. ((MMINUS) |$Dz|))
            ((MLIST) ((MMINUS) |$Dy|) |$Dz| 0.)))) 
(ADDLABEL '$%I1) 
(DSKSETQ $%O1
         '(($MATRIX SIMP) ((MLIST SIMP) 0. |$Dz| |$Dy|)
           ((MLIST SIMP) |$Dy| 0. ((MTIMES SIMP) -1. |$Dz|))
           ((MLIST SIMP) ((MTIMES SIMP) -1. |$Dy|) |$Dz| 0.))) 
(ADDLABEL '$%O1) 
(DSKSETQ $%I2
         '((MSETQ) $V
           ((MLIST) ((MEXPT) $X 2.) ((MEXPT) $Y 2.) ((MEXPT) $Z 2.)))) 
(ADDLABEL '$%I2) 
(DSKSETQ $%O2
         '((MLIST SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Y 2.)
           ((MEXPT SIMP) $Z 2.))) 
(ADDLABEL '$%O2) 
(DSKSETQ $%I3 '(($LOAD) $VECT)) 
(ADDLABEL '$%I3) 
(DSKSETQ $%O3 '"/usr/share/maxima/5.41.0/share/vector/vect.mac") 
(ADDLABEL '$%O3) 
(DSKSETQ $%I4 '((MNCTIMES) $CM $V)) 
(ADDLABEL '$%I4) 
(DSKSETQ $%O4
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADDLABEL '$%O4) 
(DSKSETQ $%I5 '(($EXPRESS) $%)) 
(ADDLABEL '$%I5) 
(DSKSETQ $%O5
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADDLABEL '$%O5) 
(DSKSETQ $%I6 '(($DETERMINANT) $%)) 
(ADDLABEL '$%I6) 
(DSKSETQ $%I7 '(($TRANSPOSE) $%O5)) 
(ADDLABEL '$%I7) 
(DSKSETQ $%O7
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.)))
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.)))
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADDLABEL '$%O7) 
(DSKSETQ $%I8 '((MSETQ) $DCV ((MNCTIMES) $CM $V))) 
(ADDLABEL '$%I8) 
(DSKSETQ $%O8
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADDLABEL '$%O8) 
(DSKSETQ $%I9 '(($DCV ARRAY) 1.)) 
(ADDLABEL '$%I9) 
(DSKSETQ $%O9
         '((MLIST SIMP)
           ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
            ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))) 
(ADDLABEL '$%O9) 
(DSKSETQ $%I10 '(($FIRST) (($DCV ARRAY) 1.))) 
(ADDLABEL '$%I10) 
(DSKSETQ $%O10
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
           ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.)))) 
(ADDLABEL '$%O10) 
(DSKSETQ $%I11
         '(($SUBSTITUTE)
           ((MLIST) ((MEQUAL) |$Dy| ((MQUOTIENT) $D $DY)))
           (($FIRST) (($DCV ARRAY) 1.)))) 
(ADDLABEL '$%I11) 
(DSKSETQ $%O11
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
           ((MTIMES SIMP) $D ((MEXPT SIMP) $DY -1.)
            ((MEXPT SIMP) $Z 2.)))) 
(ADDLABEL '$%O11) 
(DSKSETQ $%I12
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| ((MEXPT) $Z 2.))
             ((%DERIVATIVE) ((MEXPT) $Z 2.) $Y)))
           (($FIRST) (($DCV ARRAY) 1.)))) 
(ADDLABEL '$%I12) 
(DSKSETQ $%O12
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
           ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Z 2.) $Y 1.))) 
(ADDLABEL '$%O12) 
(DSKSETQ $%I13
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| ((MEXPT) $Z 2.))
             ((%DERIVATIVE) ((MEXPT) $Z 2.) $Y))
            ((MEQUAL) ((MTIMES) |$Dz| ((MEXPT) $Y 2.))
             ((%DERIVATIVE) ((MEXPT) $Y 2.) $Z)))
           (($FIRST) (($DCV ARRAY) 1.)))) 
(ADDLABEL '$%I13) 
(DSKSETQ $%O13
         '((MPLUS SIMP) ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Y 2.) $Z 1.)
           ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Z 2.) $Y 1.))) 
(ADDLABEL '$%O13) 
(DSKSETQ $%I14 '(($GRIND) $%)) 
(ADDLABEL '$%I14) 
(DSKSETQ $%O14 '$DONE) 
(ADDLABEL '$%O14) 
(DSKSETQ $%I15
         '((MSETQ) $CX
           (($SUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| ((MEXPT) $Z 2.))
              ((%DERIVATIVE) ((MEXPT) $Z 2.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| ((MEXPT) $Y 2.))
              ((%DERIVATIVE) ((MEXPT) $Y 2.) $Z)))
            (($FIRST) (($DCV ARRAY) 1.))))) 
(ADDLABEL '$%I15) 
(DSKSETQ $%O15
         '((MPLUS SIMP) ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Y 2.) $Z 1.)
           ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Z 2.) $Y 1.))) 
(ADDLABEL '$%O15) 
(DSKSETQ $%I16 '$CX) 
(ADDLABEL '$%I16) 
(DSKSETQ $%O16
         '((MPLUS SIMP) ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Y 2.) $Z 1.)
           ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Z 2.) $Y 1.))) 
(ADDLABEL '$%O16) 
(DSKSETQ $%I17 '(($EV) $CX $DIFF)) 
(ADDLABEL '$%I17) 
(DSKSETQ $%O17 '0.) 
(ADDLABEL '$%O17) 
(DSKSETQ $%I18
         '((MSETQ) $V2
           ((MLIST) ((MTIMES) ((MEXPT) $X 2.) ((MEXPT) $Z 3.))
            ((MTIMES) ((MEXPT) $Y 4.) ((MEXPT) $Z 5.))
            ((MTIMES) ((MEXPT) $X 3.) ((MEXPT) $Y 5.))))) 
(ADDLABEL '$%I18) 
(DSKSETQ $%O18
         '((MLIST SIMP)
           ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
           ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
           ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.)))) 
(ADDLABEL '$%O18) 
(DSKSETQ $%I19 '((MSETQ) $CV2 ((MNCTIMES) $CM $V2))) 
(ADDLABEL '$%I19) 
(DSKSETQ $%O19
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.)))))) 
(ADDLABEL '$%O19) 
(DSKSETQ $%I20 '((MSETQ) $DCV2 ((MNCTIMES) $CM $V2))) 
(ADDLABEL '$%I20) 
(DSKSETQ $%O20
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.)))))) 
(ADDLABEL '$%O20) 
(DSKSETQ $%I21 '(($FIRST) (($DCV2 ARRAY) 1.))) 
(ADDLABEL '$%I21) 
(DSKSETQ $%O21
         '((MPLUS SIMP)
           ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 3.)
            ((MEXPT SIMP) $Y 5.))
           ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
            ((MEXPT SIMP) $Z 5.)))) 
(ADDLABEL '$%O21) 
(DSKSETQ $%I22
         '((MSETQ) $CX2
           (($SUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dz| ((MEXPT) $Y 4.) ((MEXPT) $Z 5.))
              ((%DERIVATIVE)
               ((MTIMES) ((MEXPT) $Y 4.) ((MEXPT) $Z 5.)
                ((MEXPT) $Z 2.))
               $Z))
             ((MEQUAL) ((MTIMES) |$Dy| ((MEXPT) $X 3.) ((MEXPT) $Y 5.))
              ((%DERIVATIVE) ((MTIMES) ((MEXPT) $X 3.) ((MEXPT) $Y 5.))
               $Y)))
            (($FIRST) (($DCV2 ARRAY) 1.))))) 
(ADDLABEL '$%I22) 
(DSKSETQ $%O22
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 7.))
            $Z 1.))) 
(ADDLABEL '$%O22) 
(DSKSETQ $%I23 '(($EV) $CX2 $DIFF)) 
(ADDLABEL '$%I23) 
(DSKSETQ $%O23
         '((MPLUS SIMP)
           ((MTIMES SIMP) 5. ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 4.))
           ((MTIMES SIMP) 7. ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 6.)))) 
(ADDLABEL '$%O23) 
(DSKSETQ $%I24 '$CM) 
(ADDLABEL '$%I24) 
(DSKSETQ $%O24
         '(($MATRIX SIMP) ((MLIST SIMP) 0. |$Dz| |$Dy|)
           ((MLIST SIMP) |$Dy| 0. ((MTIMES SIMP) -1. |$Dz|))
           ((MLIST SIMP) ((MTIMES SIMP) -1. |$Dy|) |$Dz| 0.))) 
(ADDLABEL '$%O24) 
(DSKSETQ $%I25 '((MSETQ) $VF ((MLIST) $FX $FY $FZ))) 
(ADDLABEL '$%I25) 
(DSKSETQ $%O25 '((MLIST SIMP) $FX $FY $FZ)) 
(ADDLABEL '$%O25) 
(DSKSETQ $%I26 '((MNCTIMES) $CM $VF)) 
(ADDLABEL '$%I26) 
(DSKSETQ $%O26
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
             ((MTIMES SIMP) |$Dy| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
             ((MTIMES SIMP) -1. |$Dz| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| $FX)
             ((MTIMES SIMP) |$Dz| $FY))))) 
(ADDLABEL '$%O26) 
(DSKSETQ $%I27
         '((MSETQ) $VFD
           ((MLIST) ((MTIMES) ((MEXPT) $X 2.) ((MEXPT) $Z 3.))
            ((MTIMES) ((MEXPT) $Y 4.) ((MEXPT) $Z 5.))
            ((MTIMES) ((MEXPT) $X 3.) ((MEXPT) $Y 5.))))) 
(ADDLABEL '$%I27) 
(DSKSETQ $%O27
         '((MLIST SIMP)
           ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
           ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
           ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.)))) 
(ADDLABEL '$%O27) 
(DSKSETQ $%I28 '((MSETQ) $DCVF ((MNCTIMES) $CM $VF))) 
(ADDLABEL '$%I28) 
(DSKSETQ $%O28
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
             ((MTIMES SIMP) |$Dy| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
             ((MTIMES SIMP) -1. |$Dz| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| $FX)
             ((MTIMES SIMP) |$Dz| $FY))))) 
(ADDLABEL '$%O28) 
(DSKSETQ $%I29 '$DCM) 
(ADDLABEL '$%I29) 
(DSKSETQ $%O29 '$DCM) 
(ADDLABEL '$%O29) 
(DSKSETQ $%I30 '$DCV) 
(ADDLABEL '$%I30) 
(DSKSETQ $%O30
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADDLABEL '$%O30) 
(DSKSETQ $%I31 '$DCVF) 
(ADDLABEL '$%I31) 
(DSKSETQ $%O31
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
             ((MTIMES SIMP) |$Dy| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
             ((MTIMES SIMP) -1. |$Dz| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| $FX)
             ((MTIMES SIMP) |$Dz| $FY))))) 
(ADDLABEL '$%O31) 
(DSKSETQ $%I32 '(($DCVF ARRAY) 1.)) 
(ADDLABEL '$%I32) 
(DSKSETQ $%O32
         '((MLIST SIMP)
           ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
            ((MTIMES SIMP) |$Dy| $FZ)))) 
(ADDLABEL '$%O32) 
(DSKSETQ $%I33 '(($FIRST) (($DCVF ARRAY) 1.))) 
(ADDLABEL '$%I33) 
(DSKSETQ $%O33
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
           ((MTIMES SIMP) |$Dy| $FZ))) 
(ADDLABEL '$%O33) 
(DSKSETQ $%I34 '((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.)) 
(ADDLABEL '$%I34) 
(DSKSETQ $%O34
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
           ((MTIMES SIMP) |$Dy| $FZ))) 
(ADDLABEL '$%O34) 
(DSKSETQ $%I35 '((MQAPPLY ARRAY) (($DCVF ARRAY) 2.) 1.)) 
(ADDLABEL '$%I35) 
(DSKSETQ $%O35
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
           ((MTIMES SIMP) -1. |$Dz| $FZ))) 
(ADDLABEL '$%O35) 
(DSKSETQ $%I36 '((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 2.)) 
(ADDLABEL '$%I36) 
(DSKSETQ $%I37 '((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.)) 
(ADDLABEL '$%I37) 
(DSKSETQ $%O37
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
           ((MTIMES SIMP) |$Dy| $FZ))) 
(ADDLABEL '$%O37) 
(DSKSETQ $%I38 '$VFCD) 
(ADDLABEL '$%I38) 
(DSKSETQ $%O38 '$VFCD) 
(ADDLABEL '$%O38) 
(DSKSETQ $%I39 '$VFD) 
(ADDLABEL '$%I39) 
(DSKSETQ $%O39
         '((MLIST SIMP)
           ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
           ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
           ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.)))) 
(ADDLABEL '$%O39) 
(DSKSETQ $%I40 '(($VFD ARRAY) 1.)) 
(ADDLABEL '$%I40) 
(DSKSETQ $%O40
         '((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))) 
(ADDLABEL '$%O40) 
(DSKSETQ $%I41 '$DCVF) 
(ADDLABEL '$%I41) 
(DSKSETQ $%O41
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
             ((MTIMES SIMP) |$Dy| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
             ((MTIMES SIMP) -1. |$Dz| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| $FX)
             ((MTIMES SIMP) |$Dz| $FY))))) 
(ADDLABEL '$%O41) 
(DSKSETQ $%I42
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
            ((MEQUAL) ((MTIMES) |$Dz| $FY)
             ((%DERIVATIVE) (($VFD ARRAY) 2.)))
            $Z)
           ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))) 
(ADDLABEL '$%I42) 
(DSKSETQ $%I43
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y)))
           ((MQAPPLY ARRAY) (($DCV ARRAY) 1.) 1.))) 
(ADDLABEL '$%I43) 
(DSKSETQ $%O43
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
           ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.)))) 
(ADDLABEL '$%O43) 
(DSKSETQ $%I44
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y)))
           ((MQAPPLY ARRAY) (($DCV ARRAY) 1.) 1.))) 
(ADDLABEL '$%I44) 
(DSKSETQ $%O44
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
           ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.)))) 
(ADDLABEL '$%O44) 
(DSKSETQ $%I45
         '(($SUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y)))
           ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))) 
(ADDLABEL '$%I45) 
(DSKSETQ $%O45
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.))) 
(ADDLABEL '$%O45) 
(DSKSETQ $%I46
         '(($PSUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y)))
           ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))) 
(ADDLABEL '$%I46) 
(DSKSETQ $%O46
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.))) 
(ADDLABEL '$%O46) 
(DSKSETQ $%I47
         '(($PSUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
            ((MEQUAL) ((MTIMES) |$Dz| $FY)
             ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
           ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))) 
(ADDLABEL '$%I47) 
(DSKSETQ $%O47
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O47) 
(DSKSETQ $%I48
         '(($PSUBSTITUTE)
           ((MLIST)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FZ)
              ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| $FY)
              ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
            ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))
           ((MLIST)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
            ((MQAPPLY ARRAY) (($DCV ARRAY) 2.) 1.)))) 
(ADDLABEL '$%I48) 
(DSKSETQ $%I49
         '(($SUBSTITUTE)
           ((MLIST)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
            ((MQAPPLY ARRAY) (($DCV ARRAY) 2.) 1.))
           (($SUBSTITUTE)
            ((MLIST)
             ((MLIST)
              ((MEQUAL) ((MTIMES) |$Dy| $FZ)
               ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
              ((MEQUAL) ((MTIMES) |$Dz| $FY)
               ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
             ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))))) 
(ADDLABEL '$%I49) 
(DSKSETQ $%I50
         '((MSETQ) $CXFX_X
           (($PSUBSTITUTE)
            ((MLIST)
             ((MLIST)
              ((MEQUAL) ((MTIMES) |$Dy| $FZ)
               ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
              ((MEQUAL) ((MTIMES) |$Dz| $FY)
               ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
             ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))
            ((MLIST)
             ((MLIST)
              ((MEQUAL) ((MTIMES) |$Dy| $FX)
               ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
             ((MQAPPLY ARRAY) (($DCV ARRAY) 2.) 1.))))) 
(ADDLABEL '$%I50) 
(DSKSETQ $%I51
         '(($PSUBSTITUTE)
           ((MLIST)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FZ)
              ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| $FY)
              ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
            ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))
           ((MLIST)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
            ((MQAPPLY ARRAY) (($DCV ARRAY) 2.) 1.)))) 
(ADDLABEL '$%I51) 
(DSKSETQ $%I52
         '(($PSUBSTITUTE)
           ((MLIST)
            ((MEQUAL) ((MTIMES) |$Dy| $FZ)
             ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
            ((MEQUAL) ((MTIMES) |$Dz| $FY)
             ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
           ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))) 
(ADDLABEL '$%I52) 
(DSKSETQ $%O52
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O52) 
(DSKSETQ $%I53
         '((MSETQ) $CXFX
           (($PSUBSTITUTE)
            ((MLIST)
             ((MLIST)
              ((MEQUAL) ((MTIMES) |$Dy| $FZ)
               ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
              ((MEQUAL) ((MTIMES) |$Dz| $FY)
               ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
             ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.))))) 
(ADDLABEL '$%I53) 
(DSKSETQ $%I54
         '((MSETQ) $CXFX
           (($PSUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FZ)
              ((%DERIVATIVE) (($VFD ARRAY) 3.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| $FY)
              ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z)))
            ((MQAPPLY ARRAY) (($DCVF ARRAY) 1.) 1.)))) 
(ADDLABEL '$%I54) 
(DSKSETQ $%O54
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O54) 
(DSKSETQ $%I55 '$CXFX) 
(ADDLABEL '$%I55) 
(DSKSETQ $%O55
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O55) 
(DSKSETQ $%I56
         '((MSETQ) $CXFY
           (($PSUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| $FZ)
              ((%DERIVATIVE) (($VFD ARRAY) 3.) $Z)))
            ((MQAPPLY ARRAY) (($DCV ARRAY) 2.) 1.)))) 
(ADDLABEL '$%I56) 
(DSKSETQ $%O56
         '((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
           ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.)))) 
(ADDLABEL '$%O56) 
(DSKSETQ $%I57
         '((MSETQ) $CXFZ
           (($PSUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dz| $FY)
              ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z))
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
            ((MQAPPLY ARRAY) (($DCV ARRAY) 3.) 1.)))) 
(ADDLABEL '$%I57) 
(DSKSETQ $%O57
         '((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
           ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))) 
(ADDLABEL '$%O57) 
(DSKSETQ $%I58
         '((MSETQ) $CXFY
           (($PSUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y))
             ((MEQUAL) ((MTIMES) |$Dz| $FZ)
              ((%DERIVATIVE) (($VFD ARRAY) 3.) $Z)))
            ((MQAPPLY ARRAY) (($DCVF ARRAY) 2.) 1.)))) 
(ADDLABEL '$%I58) 
(DSKSETQ $%O58
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
             $Z 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
            $Y 1.))) 
(ADDLABEL '$%O58) 
(DSKSETQ $%I59
         '((MSETQ) $CXFZ
           (($PSUBSTITUTE)
            ((MLIST)
             ((MEQUAL) ((MTIMES) |$Dz| $FY)
              ((%DERIVATIVE) (($VFD ARRAY) 2.) $Z))
             ((MEQUAL) ((MTIMES) |$Dy| $FX)
              ((%DERIVATIVE) (($VFD ARRAY) 1.) $Y)))
            ((MQAPPLY ARRAY) (($DCVF ARRAY) 3.) 1.)))) 
(ADDLABEL '$%I59) 
(DSKSETQ $%O59
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
             $Y 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O59) 
(DSKSETQ $%I60 '$CXFX) 
(ADDLABEL '$%I60) 
(DSKSETQ $%O60
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O60) 
(DSKSETQ $%I61 '$CXFY) 
(ADDLABEL '$%I61) 
(DSKSETQ $%O61
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
             $Z 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
            $Y 1.))) 
(ADDLABEL '$%O61) 
(DSKSETQ $%I62 '$CXFZ) 
(ADDLABEL '$%I62) 
(DSKSETQ $%O62
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
             $Y 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADDLABEL '$%O62) 
(DSKSETQ $%I63 '(($EV) ((MLIST) $CXFX $CFXY $CFXZ) $DIFF)) 
(ADDLABEL '$%I63) 
(DSKSETQ $%O63
         '((MLIST SIMP)
           ((MPLUS SIMP)
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $X 3.)
             ((MEXPT SIMP) $Y 4.))
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.)
             ((MEXPT SIMP) $Z 4.)))
           $CFXY $CFXZ)) 
(ADDLABEL '$%O63) 
(DSKSETQ $%I64 '(($EV) $CXFX $DIFF)) 
(ADDLABEL '$%I64) 
(DSKSETQ $%O64
         '((MPLUS SIMP)
           ((MTIMES SIMP) 5. ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 4.))
           ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 4.)))) 
(ADDLABEL '$%O64) 
(DSKSETQ $%I65
         '((MSETQ) $CVFV
           ((MLIST) (($EV) $CXFX $DIFF) (($EV) $CXFY $DIFF)
            (($EV) $CXFZ $DIFF)))) 
(ADDLABEL '$%I65) 
(DSKSETQ $%O65
         '((MLIST SIMP)
           ((MPLUS SIMP)
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $X 3.)
             ((MEXPT SIMP) $Y 4.))
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.)
             ((MEXPT SIMP) $Z 4.)))
           0.
           ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 4.)))) 
(ADDLABEL '$%O65) 
(DSKSETQ $CM
         '(($MATRIX SIMP) ((MLIST SIMP) 0. |$Dz| |$Dy|)
           ((MLIST SIMP) |$Dy| 0. ((MTIMES SIMP) -1. |$Dz|))
           ((MLIST SIMP) ((MTIMES SIMP) -1. |$Dy|) |$Dz| 0.))) 
(ADD2LNC '$CM $VALUES) 
(DSKSETQ $V
         '((MLIST SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Y 2.)
           ((MEXPT SIMP) $Z 2.))) 
(ADD2LNC '$V $VALUES) 
(DSKSETQ $BESTLENGTH '0.) 
(ADD2LNC '$BESTLENGTH $VALUES) 
(DEFPROP $BESTLENGTH ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$BESTLENGTH $PROPS) 
(DEFPROP $BESTLENGTH $FIXNUM MODE) 
(ADD2LNC '$BESTLENGTH $PROPS) 
(DSKSETQ $TRYLENGTH '0.) 
(ADD2LNC '$TRYLENGTH $VALUES) 
(DEFPROP $TRYLENGTH ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$TRYLENGTH $PROPS) 
(DEFPROP $TRYLENGTH $FIXNUM MODE) 
(ADD2LNC '$TRYLENGTH $PROPS) 
(DSKSETQ $CARTESIAN2D '((MLIST SIMP) ((MLIST SIMP) $X $Y) $X $Y)) 
(ADD2LNC '$CARTESIAN2D $VALUES) 
(DSKSETQ $CARTESIAN3D '((MLIST SIMP) ((MLIST SIMP) $X $Y $Z) $X $Y $Z)) 
(ADD2LNC '$CARTESIAN3D $VALUES) 
(DSKSETQ $POLAR
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) $R ((%COS SIMP) $THETA))
            ((MTIMES SIMP) $R ((%SIN SIMP) $THETA)))
           $R $THETA)) 
(ADD2LNC '$POLAR $VALUES) 
(DSKSETQ $POLARCYLINDRICAL
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) $R ((%COS SIMP) $THETA))
            ((MTIMES SIMP) $R ((%SIN SIMP) $THETA)) $Z)
           $R $THETA $Z)) 
(ADD2LNC '$POLARCYLINDRICAL $VALUES) 
(DSKSETQ $SPHERICAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) ((%COS SIMP) $PHI) $R ((%SIN SIMP) $THETA))
            ((MTIMES SIMP) ((%SIN SIMP) $PHI) $R ((%SIN SIMP) $THETA))
            ((MTIMES SIMP) $R ((%COS SIMP) $THETA)))
           $R $THETA $PHI)) 
(ADD2LNC '$SPHERICAL $VALUES) 
(DSKSETQ $ELLIPTIC
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V))
            ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)))
           $U $V)) 
(ADD2LNC '$ELLIPTIC $VALUES) 
(DSKSETQ $ELLIPTICCYLINDRICAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V))
            ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)) $Z)
           $U $V $Z)) 
(ADD2LNC '$ELLIPTICCYLINDRICAL $VALUES) 
(DSKSETQ $CONFOCALELLIPTIC
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) $E $U $V)
            ((MTIMES SIMP) $E
             ((MEXPT SIMP)
              ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) 1.
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
              ((RAT SIMP) 1. 2.))))
           $U $V)) 
(ADD2LNC '$CONFOCALELLIPTIC $VALUES) 
(DSKSETQ $PROLATESPHEROIDALSQRT
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) $E $U $V)
            ((MTIMES SIMP) $E ((%COS SIMP) $PHI)
             ((MEXPT SIMP)
              ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) 1.
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
              ((RAT SIMP) 1. 2.)))
            ((MTIMES SIMP) $E ((%SIN SIMP) $PHI)
             ((MEXPT SIMP)
              ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) 1.
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
              ((RAT SIMP) 1. 2.))))
           $PHI $U $V)) 
(ADD2LNC '$PROLATESPHEROIDALSQRT $VALUES) 
(DSKSETQ $OBLATESPHEROIDALSQRT
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) $U $V)
            ((MTIMES SIMP) $E
             ((MEXPT SIMP)
              ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) 1.
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
              ((RAT SIMP) 1. 2.)))
            ((MTIMES SIMP) $E ((%COS SIMP) $PHI) $U $V))
           $PHI $U $V)) 
(ADD2LNC '$OBLATESPHEROIDALSQRT $VALUES) 
(DSKSETQ $PARABOLIC
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
             ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
              ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
            ((MTIMES SIMP) $U $V))
           $U $V)) 
(ADD2LNC '$PARABOLIC $VALUES) 
(DSKSETQ $PARABOLICCYLINDRICAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
             ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
              ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
            ((MTIMES SIMP) $U $V) $Z)
           $U $V $Z)) 
(ADD2LNC '$PARABOLICCYLINDRICAL $VALUES) 
(DSKSETQ $PARABOLOIDAL
         '((MLIST SIMP)
           ((MLIST SIMP) ((MTIMES SIMP) ((%COS SIMP) $PHI) $U $V)
            ((MTIMES SIMP) ((%SIN SIMP) $PHI) $U $V)
            ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
             ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
              ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.)))))
           $PHI $U $V)) 
(ADD2LNC '$PARABOLOIDAL $VALUES) 
(DSKSETQ $PROLATESPHEROIDAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E ((%COS SIMP) $PHI) ((%SINH SIMP) $U)
             ((%SIN SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) ((%SINH SIMP) $U)
             ((%SIN SIMP) $V))
            ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V)))
           $PHI $U $V)) 
(ADD2LNC '$PROLATESPHEROIDAL $VALUES) 
(DSKSETQ $OBLATESPHEROIDAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E ((%COS SIMP) $PHI) ((%COSH SIMP) $U)
             ((%COS SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) ((%COSH SIMP) $U)
             ((%COS SIMP) $V))
            ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)))
           $PHI $U $V)) 
(ADD2LNC '$OBLATESPHEROIDAL $VALUES) 
(DSKSETQ $BIPOLAR
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)
             ((%SINH SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $U)
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)))
           $U $V)) 
(ADD2LNC '$BIPOLAR $VALUES) 
(DSKSETQ $BIPOLARCYLINDRICAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)
             ((%SINH SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $U)
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.))
            $Z)
           $U $V $Z)) 
(ADD2LNC '$BIPOLARCYLINDRICAL $VALUES) 
(DSKSETQ $TOROIDAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) $E ((%COS SIMP) $PHI)
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)
             ((%SINH SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $PHI)
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)
             ((%SINH SIMP) $V))
            ((MTIMES SIMP) $E ((%SIN SIMP) $U)
             ((MEXPT SIMP)
              ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
               ((%COSH SIMP) $V))
              -1.)))
           $PHI $U $V)) 
(ADD2LNC '$TOROIDAL $VALUES) 
(DSKSETQ $CONICAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $E -1.) ((MEXPT SIMP) $F -1.)
             $U $V $W)
            ((MTIMES SIMP) ((MEXPT SIMP) $E -1.)
             ((MEXPT SIMP)
              ((MTIMES SIMP)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.)))
                -1.)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                ((MEXPT SIMP) $V 2.)))
              ((RAT SIMP) 1. 2.))
             $W)
            ((MTIMES SIMP) ((MEXPT SIMP) $F -1.)
             ((MEXPT SIMP)
              ((MTIMES SIMP)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                 ((MEXPT SIMP) $F 2.))
                -1.)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                ((MEXPT SIMP) $U 2.))
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                ((MEXPT SIMP) $V 2.)))
              ((RAT SIMP) 1. 2.))
             $W))
           $U $V $W)) 
(ADD2LNC '$CONICAL $VALUES) 
(DSKSETQ $CONFOCALELLIPSOIDAL
         '((MLIST SIMP)
           ((MLIST SIMP)
            ((MEXPT SIMP)
             ((MTIMES SIMP)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.)))
               -1.)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $G 2.)))
               -1.)
              ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
               ((MTIMES SIMP) -1. $U))
              ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
               ((MTIMES SIMP) -1. $V))
              ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
               ((MTIMES SIMP) -1. $W)))
             ((RAT SIMP) 1. 2.))
            ((MEXPT SIMP)
             ((MTIMES SIMP)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                ((MEXPT SIMP) $F 2.))
               -1.)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
                ((MTIMES SIMP) -1. ((MEXPT SIMP) $G 2.)))
               -1.)
              ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
               ((MTIMES SIMP) -1. $U))
              ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
               ((MTIMES SIMP) -1. $V))
              ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
               ((MTIMES SIMP) -1. $W)))
             ((RAT SIMP) 1. 2.))
            ((MEXPT SIMP)
             ((MTIMES SIMP)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                ((MEXPT SIMP) $G 2.))
               -1.)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                ((MEXPT SIMP) $G 2.))
               -1.)
              ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
               ((MTIMES SIMP) -1. $U))
              ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
               ((MTIMES SIMP) -1. $V))
              ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
               ((MTIMES SIMP) -1. $W)))
             ((RAT SIMP) 1. 2.)))
           $U $V $W)) 
(ADD2LNC '$CONFOCALELLIPSOIDAL $VALUES) 
(DSKSETQ $COORDS
         '((MLIST SIMP) ((MLIST SIMP) ((MLIST SIMP) $X $Y) $X $Y)
           ((MLIST SIMP) ((MLIST SIMP) $X $Y $Z) $X $Y $Z)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) $R ((%COS SIMP) $THETA))
             ((MTIMES SIMP) $R ((%SIN SIMP) $THETA)))
            $R $THETA)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) $R ((%COS SIMP) $THETA))
             ((MTIMES SIMP) $R ((%SIN SIMP) $THETA)) $Z)
            $R $THETA $Z)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) ((%COS SIMP) $PHI) $R ((%SIN SIMP) $THETA))
             ((MTIMES SIMP) ((%SIN SIMP) $PHI) $R ((%SIN SIMP) $THETA))
             ((MTIMES SIMP) $R ((%COS SIMP) $THETA)))
            $R $THETA $PHI)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V))
             ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)))
            $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V))
             ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)) $Z)
            $U $V $Z)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) $E $U $V)
             ((MTIMES SIMP) $E
              ((MEXPT SIMP)
               ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) 1.
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
               ((RAT SIMP) 1. 2.))))
            $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) $E $U $V)
             ((MTIMES SIMP) $E ((%COS SIMP) $PHI)
              ((MEXPT SIMP)
               ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) 1.
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
               ((RAT SIMP) 1. 2.)))
             ((MTIMES SIMP) $E ((%SIN SIMP) $PHI)
              ((MEXPT SIMP)
               ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) 1.
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
               ((RAT SIMP) 1. 2.))))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) $U $V)
             ((MTIMES SIMP) $E
              ((MEXPT SIMP)
               ((MTIMES SIMP) ((MPLUS SIMP) -1. ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) 1.
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
               ((RAT SIMP) 1. 2.)))
             ((MTIMES SIMP) $E ((%COS SIMP) $PHI) $U $V))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
              ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
               ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
             ((MTIMES SIMP) $U $V))
            $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
              ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
               ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.))))
             ((MTIMES SIMP) $U $V) $Z)
            $U $V $Z)
           ((MLIST SIMP)
            ((MLIST SIMP) ((MTIMES SIMP) ((%COS SIMP) $PHI) $U $V)
             ((MTIMES SIMP) ((%SIN SIMP) $PHI) $U $V)
             ((MTIMES SIMP) ((RAT SIMP) 1. 2.)
              ((MPLUS SIMP) ((MEXPT SIMP) $U 2.)
               ((MTIMES SIMP) -1. ((MEXPT SIMP) $V 2.)))))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E ((%COS SIMP) $PHI) ((%SINH SIMP) $U)
              ((%SIN SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) ((%SINH SIMP) $U)
              ((%SIN SIMP) $V))
             ((MTIMES SIMP) $E ((%COSH SIMP) $U) ((%COS SIMP) $V)))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E ((%COS SIMP) $PHI) ((%COSH SIMP) $U)
              ((%COS SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $PHI) ((%COSH SIMP) $U)
              ((%COS SIMP) $V))
             ((MTIMES SIMP) $E ((%SINH SIMP) $U) ((%SIN SIMP) $V)))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)
              ((%SINH SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $U)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)))
            $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)
              ((%SINH SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $U)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.))
             $Z)
            $U $V $Z)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) $E ((%COS SIMP) $PHI)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)
              ((%SINH SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $PHI)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)
              ((%SINH SIMP) $V))
             ((MTIMES SIMP) $E ((%SIN SIMP) $U)
              ((MEXPT SIMP)
               ((MPLUS SIMP) ((MTIMES SIMP) -1. ((%COS SIMP) $U))
                ((%COSH SIMP) $V))
               -1.)))
            $PHI $U $V)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $E -1.) ((MEXPT SIMP) $F -1.)
              $U $V $W)
             ((MTIMES SIMP) ((MEXPT SIMP) $E -1.)
              ((MEXPT SIMP)
               ((MTIMES SIMP)
                ((MEXPT SIMP)
                 ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                  ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.)))
                 -1.)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                 ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                 ((MEXPT SIMP) $V 2.)))
               ((RAT SIMP) 1. 2.))
              $W)
             ((MTIMES SIMP) ((MEXPT SIMP) $F -1.)
              ((MEXPT SIMP)
               ((MTIMES SIMP)
                ((MEXPT SIMP)
                 ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                  ((MEXPT SIMP) $F 2.))
                 -1.)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                 ((MEXPT SIMP) $U 2.))
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                 ((MEXPT SIMP) $V 2.)))
               ((RAT SIMP) 1. 2.))
              $W))
            $U $V $W)
           ((MLIST SIMP)
            ((MLIST SIMP)
             ((MEXPT SIMP)
              ((MTIMES SIMP)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.)))
                -1.)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $G 2.)))
                -1.)
               ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                ((MTIMES SIMP) -1. $U))
               ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                ((MTIMES SIMP) -1. $V))
               ((MPLUS SIMP) ((MEXPT SIMP) $E 2.)
                ((MTIMES SIMP) -1. $W)))
              ((RAT SIMP) 1. 2.))
             ((MEXPT SIMP)
              ((MTIMES SIMP)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                 ((MEXPT SIMP) $F 2.))
                -1.)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
                 ((MTIMES SIMP) -1. ((MEXPT SIMP) $G 2.)))
                -1.)
               ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
                ((MTIMES SIMP) -1. $U))
               ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
                ((MTIMES SIMP) -1. $V))
               ((MPLUS SIMP) ((MEXPT SIMP) $F 2.)
                ((MTIMES SIMP) -1. $W)))
              ((RAT SIMP) 1. 2.))
             ((MEXPT SIMP)
              ((MTIMES SIMP)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $E 2.))
                 ((MEXPT SIMP) $G 2.))
                -1.)
               ((MEXPT SIMP)
                ((MPLUS SIMP) ((MTIMES SIMP) -1. ((MEXPT SIMP) $F 2.))
                 ((MEXPT SIMP) $G 2.))
                -1.)
               ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
                ((MTIMES SIMP) -1. $U))
               ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
                ((MTIMES SIMP) -1. $V))
               ((MPLUS SIMP) ((MEXPT SIMP) $G 2.)
                ((MTIMES SIMP) -1. $W)))
              ((RAT SIMP) 1. 2.)))
            $U $V $W))) 
(ADD2LNC '$COORDS $VALUES) 
(DSKSETQ $COORDINATES '((MLIST SIMP) $X $Y $Z)) 
(ADD2LNC '$COORDINATES $VALUES) 
(DEFPROP $COORDINATES $ANY MODE) 
(ADD2LNC '$COORDINATES $PROPS) 
(DSKSETQ $DIMENSION '3.) 
(ADD2LNC '$DIMENSION $VALUES) 
(DEFPROP $DIMENSION ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$DIMENSION $PROPS) 
(DEFPROP $DIMENSION $FIXNUM MODE) 
(ADD2LNC '$DIMENSION $PROPS) 
(DSKSETQ $DIMENIMBED '1.) 
(ADD2LNC '$DIMENIMBED $VALUES) 
(DEFPROP $DIMENIMBED ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$DIMENIMBED $PROPS) 
(DEFPROP $DIMENIMBED $FIXNUM MODE) 
(ADD2LNC '$DIMENIMBED $PROPS) 
(DSKSETQ $SFPROD '1.) 
(ADD2LNC '$SFPROD $VALUES) 
(DEFPROP $SFPROD $ANY MODE) 
(ADD2LNC '$SFPROD $PROPS) 
(DSKSETQ $SF '((MLIST SIMP) 1. 1. 1.)) 
(ADD2LNC '$SF $VALUES) 
(DEFPROP $SF ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$SF $PROPS) 
(DEFPROP $SF $LIST MODE) 
(ADD2LNC '$SF $PROPS) 
(DSKSETQ $EXPANDALL 'NIL) 
(ADD2LNC '$EXPANDALL $VALUES) 
(DEFPROP $EXPANDALL T EVFLAG) 
(ADD2LNC '$EXPANDALL $PROPS) 
(DEFPROP $EXPANDALL ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDALL $PROPS) 
(DEFPROP $EXPANDALL $BOOLEAN MODE) 
(ADD2LNC '$EXPANDALL $PROPS) 
(DSKSETQ $EXPANDDOT 'NIL) 
(ADD2LNC '$EXPANDDOT $VALUES) 
(DEFPROP $EXPANDDOT T EVFLAG) 
(ADD2LNC '$EXPANDDOT $PROPS) 
(DEFPROP $EXPANDDOT ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDDOT $PROPS) 
(DEFPROP $EXPANDDOT $BOOLEAN MODE) 
(ADD2LNC '$EXPANDDOT $PROPS) 
(DSKSETQ $EXPANDDOTPLUS 'NIL) 
(ADD2LNC '$EXPANDDOTPLUS $VALUES) 
(DEFPROP $EXPANDDOTPLUS T EVFLAG) 
(ADD2LNC '$EXPANDDOTPLUS $PROPS) 
(DEFPROP $EXPANDDOTPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDDOTPLUS $PROPS) 
(DEFPROP $EXPANDDOTPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDDOTPLUS $PROPS) 
(DSKSETQ $EXPANDGRAD 'NIL) 
(ADD2LNC '$EXPANDGRAD $VALUES) 
(DEFPROP $EXPANDGRAD T EVFLAG) 
(ADD2LNC '$EXPANDGRAD $PROPS) 
(DEFPROP $EXPANDGRAD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDGRAD $PROPS) 
(DEFPROP $EXPANDGRAD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDGRAD $PROPS) 
(DSKSETQ $EXPANDPLUS 'NIL) 
(ADD2LNC '$EXPANDPLUS $VALUES) 
(DEFPROP $EXPANDPLUS T EVFLAG) 
(ADD2LNC '$EXPANDPLUS $PROPS) 
(DEFPROP $EXPANDPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDPLUS $PROPS) 
(DEFPROP $EXPANDPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDPLUS $PROPS) 
(DSKSETQ $EXPANDGRADPLUS 'NIL) 
(ADD2LNC '$EXPANDGRADPLUS $VALUES) 
(DEFPROP $EXPANDGRADPLUS T EVFLAG) 
(ADD2LNC '$EXPANDGRADPLUS $PROPS) 
(DEFPROP $EXPANDGRADPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDGRADPLUS $PROPS) 
(DEFPROP $EXPANDGRADPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDGRADPLUS $PROPS) 
(DSKSETQ $EXPANDDIV 'NIL) 
(ADD2LNC '$EXPANDDIV $VALUES) 
(DEFPROP $EXPANDDIV T EVFLAG) 
(ADD2LNC '$EXPANDDIV $PROPS) 
(DEFPROP $EXPANDDIV ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDDIV $PROPS) 
(DEFPROP $EXPANDDIV $BOOLEAN MODE) 
(ADD2LNC '$EXPANDDIV $PROPS) 
(DSKSETQ $EXPANDDIVPLUS 'NIL) 
(ADD2LNC '$EXPANDDIVPLUS $VALUES) 
(DEFPROP $EXPANDDIVPLUS T EVFLAG) 
(ADD2LNC '$EXPANDDIVPLUS $PROPS) 
(DEFPROP $EXPANDDIVPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDDIVPLUS $PROPS) 
(DEFPROP $EXPANDDIVPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDDIVPLUS $PROPS) 
(DSKSETQ $EXPANDCURL 'NIL) 
(ADD2LNC '$EXPANDCURL $VALUES) 
(DEFPROP $EXPANDCURL T EVFLAG) 
(ADD2LNC '$EXPANDCURL $PROPS) 
(DEFPROP $EXPANDCURL ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCURL $PROPS) 
(DEFPROP $EXPANDCURL $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCURL $PROPS) 
(DSKSETQ $EXPANDCURLPLUS 'NIL) 
(ADD2LNC '$EXPANDCURLPLUS $VALUES) 
(DEFPROP $EXPANDCURLPLUS T EVFLAG) 
(ADD2LNC '$EXPANDCURLPLUS $PROPS) 
(DEFPROP $EXPANDCURLPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCURLPLUS $PROPS) 
(DEFPROP $EXPANDCURLPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCURLPLUS $PROPS) 
(DSKSETQ $EXPANDLAPLACIAN 'NIL) 
(ADD2LNC '$EXPANDLAPLACIAN $VALUES) 
(DEFPROP $EXPANDLAPLACIAN T EVFLAG) 
(ADD2LNC '$EXPANDLAPLACIAN $PROPS) 
(DEFPROP $EXPANDLAPLACIAN ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDLAPLACIAN $PROPS) 
(DEFPROP $EXPANDLAPLACIAN $BOOLEAN MODE) 
(ADD2LNC '$EXPANDLAPLACIAN $PROPS) 
(DSKSETQ $EXPANDLAPLACIANPLUS 'NIL) 
(ADD2LNC '$EXPANDLAPLACIANPLUS $VALUES) 
(DEFPROP $EXPANDLAPLACIANPLUS T EVFLAG) 
(ADD2LNC '$EXPANDLAPLACIANPLUS $PROPS) 
(DEFPROP $EXPANDLAPLACIANPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDLAPLACIANPLUS $PROPS) 
(DEFPROP $EXPANDLAPLACIANPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDLAPLACIANPLUS $PROPS) 
(DSKSETQ $EXPANDPROD 'NIL) 
(ADD2LNC '$EXPANDPROD $VALUES) 
(DEFPROP $EXPANDPROD T EVFLAG) 
(ADD2LNC '$EXPANDPROD $PROPS) 
(DEFPROP $EXPANDPROD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDPROD $PROPS) 
(DEFPROP $EXPANDPROD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDPROD $PROPS) 
(DSKSETQ $EXPANDGRADPROD 'NIL) 
(ADD2LNC '$EXPANDGRADPROD $VALUES) 
(DEFPROP $EXPANDGRADPROD T EVFLAG) 
(ADD2LNC '$EXPANDGRADPROD $PROPS) 
(DEFPROP $EXPANDGRADPROD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDGRADPROD $PROPS) 
(DEFPROP $EXPANDGRADPROD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDGRADPROD $PROPS) 
(DSKSETQ $EXPANDDIVPROD 'NIL) 
(ADD2LNC '$EXPANDDIVPROD $VALUES) 
(DEFPROP $EXPANDDIVPROD T EVFLAG) 
(ADD2LNC '$EXPANDDIVPROD $PROPS) 
(DEFPROP $EXPANDDIVPROD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDDIVPROD $PROPS) 
(DEFPROP $EXPANDDIVPROD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDDIVPROD $PROPS) 
(DSKSETQ $EXPANDCURLCURL 'NIL) 
(ADD2LNC '$EXPANDCURLCURL $VALUES) 
(DEFPROP $EXPANDCURLCURL T EVFLAG) 
(ADD2LNC '$EXPANDCURLCURL $PROPS) 
(DEFPROP $EXPANDCURLCURL ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCURLCURL $PROPS) 
(DEFPROP $EXPANDCURLCURL $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCURLCURL $PROPS) 
(DSKSETQ $EXPANDLAPLACIANTODIVGRAD 'NIL) 
(ADD2LNC '$EXPANDLAPLACIANTODIVGRAD $VALUES) 
(DEFPROP $EXPANDLAPLACIANTODIVGRAD T EVFLAG) 
(ADD2LNC '$EXPANDLAPLACIANTODIVGRAD $PROPS) 
(DEFPROP $EXPANDLAPLACIANTODIVGRAD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDLAPLACIANTODIVGRAD $PROPS) 
(DEFPROP $EXPANDLAPLACIANTODIVGRAD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDLAPLACIANTODIVGRAD $PROPS) 
(DSKSETQ $EXPANDLAPLACIANPROD 'NIL) 
(ADD2LNC '$EXPANDLAPLACIANPROD $VALUES) 
(DEFPROP $EXPANDLAPLACIANPROD T EVFLAG) 
(ADD2LNC '$EXPANDLAPLACIANPROD $PROPS) 
(DEFPROP $EXPANDLAPLACIANPROD ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDLAPLACIANPROD $PROPS) 
(DEFPROP $EXPANDLAPLACIANPROD $BOOLEAN MODE) 
(ADD2LNC '$EXPANDLAPLACIANPROD $PROPS) 
(DSKSETQ $EXPANDCROSS 'NIL) 
(ADD2LNC '$EXPANDCROSS $VALUES) 
(DEFPROP $EXPANDCROSS T EVFLAG) 
(ADD2LNC '$EXPANDCROSS $PROPS) 
(DEFPROP $EXPANDCROSS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCROSS $PROPS) 
(DEFPROP $EXPANDCROSS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCROSS $PROPS) 
(DSKSETQ $EXPANDCROSSCROSS 'NIL) 
(ADD2LNC '$EXPANDCROSSCROSS $VALUES) 
(DEFPROP $EXPANDCROSSCROSS T EVFLAG) 
(ADD2LNC '$EXPANDCROSSCROSS $PROPS) 
(DEFPROP $EXPANDCROSSCROSS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCROSSCROSS $PROPS) 
(DEFPROP $EXPANDCROSSCROSS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCROSSCROSS $PROPS) 
(DSKSETQ $EXPANDCROSSPLUS 'NIL) 
(ADD2LNC '$EXPANDCROSSPLUS $VALUES) 
(DEFPROP $EXPANDCROSSPLUS T EVFLAG) 
(ADD2LNC '$EXPANDCROSSPLUS $PROPS) 
(DEFPROP $EXPANDCROSSPLUS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDCROSSPLUS $PROPS) 
(DEFPROP $EXPANDCROSSPLUS $BOOLEAN MODE) 
(ADD2LNC '$EXPANDCROSSPLUS $PROPS) 
(DSKSETQ $FIRSTCROSSSCALAR 'NIL) 
(ADD2LNC '$FIRSTCROSSSCALAR $VALUES) 
(DEFPROP $FIRSTCROSSSCALAR ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$FIRSTCROSSSCALAR $PROPS) 
(DEFPROP $FIRSTCROSSSCALAR $BOOLEAN MODE) 
(ADD2LNC '$FIRSTCROSSSCALAR $PROPS) 
(DSKSETQ $EXPANDFLAGS
         '((MLIST SIMP) $EXPANDALL $EXPANDDOT $EXPANDDOTPLUS
           $EXPANDCROSS $EXPANDCROSSPLUS $EXPANDCROSSCROSS $EXPANDGRAD
           $EXPANDGRADPLUS $EXPANDGRADPROD $EXPANDDIV $EXPANDDIVPLUS
           $EXPANDDIVPROD $EXPANDCURL $EXPANDCURLPLUS $EXPANDCURLCURL
           $EXPANDLAPLACIAN $EXPANDLAPLACIANPLUS $EXPANDLAPLACIANPROD
           $EXPANDLAPLACIANTODIVGRAD $EXPANDPLUS $EXPANDPROD)) 
(ADD2LNC '$EXPANDFLAGS $VALUES) 
(DEFPROP $EXPANDFLAGS ASSIGN-MODE-CHECK ASSIGN) 
(ADD2LNC '$EXPANDFLAGS $PROPS) 
(DEFPROP $EXPANDFLAGS $LIST MODE) 
(ADD2LNC '$EXPANDFLAGS $PROPS) 
(DSKSETQ $POTENTIALZEROLOC '0.) 
(ADD2LNC '$POTENTIALZEROLOC $VALUES) 
(DEFPROP $POTENTIALZEROLOC $ANY MODE) 
(ADD2LNC '$POTENTIALZEROLOC $PROPS) 
(DSKSETQ $DCV
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $Z 2.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 2.)))))) 
(ADD2LNC '$DCV $VALUES) 
(DSKSETQ $CX
         '((MPLUS SIMP) ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Y 2.) $Z 1.)
           ((%DERIVATIVE SIMP) ((MEXPT SIMP) $Z 2.) $Y 1.))) 
(ADD2LNC '$CX $VALUES) 
(DSKSETQ $V2
         '((MLIST SIMP)
           ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
           ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
           ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.)))) 
(ADD2LNC '$V2 $VALUES) 
(DSKSETQ $CV2
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.)))))) 
(ADD2LNC '$CV2 $VALUES) 
(DSKSETQ $DCV2
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dz| ((MEXPT SIMP) $X 3.)
              ((MEXPT SIMP) $Y 5.))
             ((MTIMES SIMP) |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))))
           ((MLIST SIMP)
            ((MPLUS SIMP)
             ((MTIMES SIMP) -1. |$Dy| ((MEXPT SIMP) $X 2.)
              ((MEXPT SIMP) $Z 3.))
             ((MTIMES SIMP) |$Dz| ((MEXPT SIMP) $Y 4.)
              ((MEXPT SIMP) $Z 5.)))))) 
(ADD2LNC '$DCV2 $VALUES) 
(DSKSETQ $CX2
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 7.))
            $Z 1.))) 
(ADD2LNC '$CX2 $VALUES) 
(DSKSETQ $VF '((MLIST SIMP) $FX $FY $FZ)) 
(ADD2LNC '$VF $VALUES) 
(DSKSETQ $VFD
         '((MLIST SIMP)
           ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
           ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
           ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.)))) 
(ADD2LNC '$VFD $VALUES) 
(DSKSETQ $DCVF
         '(($MATRIX SIMP)
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dz| $FY)
             ((MTIMES SIMP) |$Dy| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) |$Dy| $FX)
             ((MTIMES SIMP) -1. |$Dz| $FZ)))
           ((MLIST SIMP)
            ((MPLUS SIMP) ((MTIMES SIMP) -1. |$Dy| $FX)
             ((MTIMES SIMP) |$Dz| $FY))))) 
(ADD2LNC '$DCVF $VALUES) 
(DSKSETQ $CXFX
         '((MPLUS SIMP)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
            $Y 1.)
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADD2LNC '$CXFX $VALUES) 
(DSKSETQ $CXFY
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 3.) ((MEXPT SIMP) $Y 5.))
             $Z 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
            $Y 1.))) 
(ADD2LNC '$CXFY $VALUES) 
(DSKSETQ $CXFZ
         '((MPLUS SIMP)
           ((MTIMES SIMP) -1.
            ((%DERIVATIVE SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) $X 2.) ((MEXPT SIMP) $Z 3.))
             $Y 1.))
           ((%DERIVATIVE SIMP)
            ((MTIMES SIMP) ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 5.))
            $Z 1.))) 
(ADD2LNC '$CXFZ $VALUES) 
(DSKSETQ $CVFV
         '((MLIST SIMP)
           ((MPLUS SIMP)
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $X 3.)
             ((MEXPT SIMP) $Y 4.))
            ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.)
             ((MEXPT SIMP) $Z 4.)))
           0.
           ((MTIMES SIMP) 5. ((MEXPT SIMP) $Y 4.) ((MEXPT SIMP) $Z 4.)))) 
(ADD2LNC '$CVFV $VALUES) 
(MDEFPROP $TRIGONOMETRICP
    ((LAMBDA) ((MLIST) %EXP)
     (($IS)
      ((MOR)
       ((MEQUAL) (($GET) (($INPART) %EXP 0.) ((MQUOTE) $TYPE))
        ((MQUOTE) $TRIGONOMETRIC))
       ((MEQUAL) (($GET) $PIECE ((MQUOTE) $TYPE))
        ((MQUOTE) $HYPER_TRIGONOMETRIC)))))
    MEXPR) 
(ADD2LNC '(($TRIGONOMETRICP) %EXP) $FUNCTIONS) 
(MDEFPROP $TRIGSIMP
    ((LAMBDA) ((MLIST) $X%)
     (($TRIGSIMP3)
      (($RATSIMP)
       (($APPLY1) $X% $TRIGRULE1 $TRIGRULE2 $TRIGRULE3 $TRIGRULE4
        $HTRIGRULE1 $HTRIGRULE2 $HTRIGRULE3 $HTRIGRULE4))))
    MEXPR) 
(ADD2LNC '(($TRIGSIMP) $X%) $FUNCTIONS) 
(MDEFPROP $TRIGSIMP3
    ((LAMBDA) ((MLIST) $EXPN)
     ((MCOND) (($LISTP) $EXPN)
      ((MCOND) ((MEQUAL) $EXPN ((MLIST))) ((MLIST)) T
       (($CONS)
        (($RATSIMP)
         ((MQUOTIENT) (($TRIGSIMP1) (($NUM) (($EXPN ARRAY) 1.)))
          (($TRIGSIMP1) (($DENOM) (($EXPN ARRAY) 1.)))))
        (($TRIGSIMP3) (($REST) $EXPN))))
      T
      (($RATSIMP)
       ((MQUOTIENT) (($TRIGSIMP1) (($NUM) $EXPN))
        (($TRIGSIMP1) (($DENOM) $EXPN))))))
    MEXPR) 
(ADD2LNC '(($TRIGSIMP3) $EXPN) $FUNCTIONS) 
(MDEFPROP $TRIGSIMP1
    ((LAMBDA) ((MLIST) $EXPN)
     ((MPROG) ((MLIST) $LISTOFTRIGSQ $BESTLENGTH $TRYLENGTH)
      ((MSETQ) $LISTOFTRIGSQ (($LISTOFTRIGSQ) $EXPN))
      ((MSETQ) $BESTLENGTH 999999.)
      ((MCOND) ((MNOTEQUAL) $LISTOFTRIGSQ ((MLIST)))
       (($IMPROVE) $EXPN $EXPN $LISTOFTRIGSQ) T $EXPN)))
    MEXPR) 
(ADD2LNC '(($TRIGSIMP1) $EXPN) $FUNCTIONS) 
(MDEFPROP $IMPROVE
    ((LAMBDA) ((MLIST) $EXPN $SUBSOFAR $LISTOFTRIGSQ)
     ((MCOND) ((MEQUAL) $LISTOFTRIGSQ ((MLIST)))
      ((MCOND)
       ((MLESSP) ((MSETQ) $TRYLENGTH (($EXPNLENGTH) $SUBSOFAR))
        $BESTLENGTH)
       ((MPROGN) ((MSETQ) $BESTLENGTH $TRYLENGTH) $SUBSOFAR) T $EXPN)
      T
      ((MPROGN)
       ((MSETQ) $SUBSOFAR
        (($IMPROVE) $EXPN $SUBSOFAR (($REST) $LISTOFTRIGSQ)))
       ((MDOIN) $ALT (($FIRST) $LISTOFTRIGSQ) NIL NIL NIL NIL
        ((MSETQ) $SUBSOFAR
         (($IMPROVE) $SUBSOFAR
          (($RATSUBST)
           ((MPLUS) (($GET) (($INPART) $ALT 0.) ((MQUOTE) $UNITCOF))
            ((MTIMES) (($GET) $PIECE ((MQUOTE) $COMPLEMENT_COF))
             ((MEXPT)
              ((MQAPPLY)
               (($GET) $PIECE ((MQUOTE) $COMPLEMENT_FUNCTION))
               (($FIRST) $ALT))
              2.)))
           ((MEXPT) $ALT 2.) $SUBSOFAR)
          (($REST) $LISTOFTRIGSQ))))
       $SUBSOFAR)))
    MEXPR) 
(ADD2LNC '(($IMPROVE) $EXPN $SUBSOFAR $LISTOFTRIGSQ) $FUNCTIONS) 
(MDEFPROP $LISTOFTRIGSQ
    ((LAMBDA) ((MLIST) $EXPN)
     ((MCOND) (($ATOM) $EXPN) ((MLIST)) T
      ((MPROG) ((MLIST) $INFLAG ((MSETQ) $ANS ((MLIST))))
       ((MCOND)
        ((MAND) ((MEQUAL) (($INPART) $EXPN 0.) "^")
         (($INTEGERP) (($INPART) $EXPN 2.)) ((MGEQP) $PIECE 2.))
        ((MCOND) (($ATOM) ((MSETQ) $EXPN (($INPART) $EXPN 1.)))
         ((MRETURN) ((MLIST))) T
         ((MCOND) (($TRIGONOMETRICP) $EXPN)
          ((MRETURN) ((MLIST) ((MLIST) $EXPN))) T $FALSE))
        T $FALSE)
       ((MSETQ) $INFLAG T)
       ((MDOIN) $ARG $EXPN NIL NIL NIL NIL
        ((MSETQ) $ANS (($SPECIALUNION) (($LISTOFTRIGSQ) $ARG) $ANS)))
       $ANS)))
    MEXPR) 
(ADD2LNC '(($LISTOFTRIGSQ) $EXPN) $FUNCTIONS) 
(MDEFPROP $SPECIALUNION
    ((LAMBDA) ((MLIST) $LIST1 $LIST2)
     ((MCOND) ((MEQUAL) $LIST1 ((MLIST))) $LIST2 T
      ((MCOND) ((MEQUAL) $LIST2 ((MLIST))) $LIST1 T
       ((MPROG) ((MLIST) ((MSETQ) $ALTERNATES (($FIRST) $LIST1)))
        ((MDOIN) $ALT $ALTERNATES NIL NIL NIL NIL
         ((MSETQ) $LIST2
          (($UPDATE) $ALT
           (($GET) (($INPART) $ALT 0.) ((MQUOTE) $COMPLEMENT_FUNCTION)))))
        (($SPECIALUNION) (($REST) $LIST1) $LIST2)))))
    MEXPR) 
(ADD2LNC '(($SPECIALUNION) $LIST1 $LIST2) $FUNCTIONS) 
(MDEFPROP $UPDATE
    ((LAMBDA) ((MLIST) $FORM $COMPLEMENT)
     ((MPROG) ((MLIST) $ANS)
      ((MSETQ) $COMPLEMENT
       (($APPLY) $COMPLEMENT ((MLIST) (($INPART) $FORM 1.))))
      ((MSETQ) $ANS
       ((MDOIN) $ELEMENT $LIST2 NIL NIL NIL NIL
        ((MCOND) (($MEMBER) $FORM $ELEMENT)
         ((MRETURN) ((MQUOTE) $FOUND)) T
         ((MCOND) (($MEMBER) $COMPLEMENT $ELEMENT)
          ((MRETURN)
           (($CONS) ((MLIST) $FORM $COMPLEMENT)
            (($DELETE) $ELEMENT $LIST2)))
          T $FALSE))))
      ((MCOND) ((MEQUAL) $ANS ((MQUOTE) $FOUND)) $LIST2 T
       ((MCOND) ((MEQUAL) $ANS ((MQUOTE) $DONE))
        (($CONS) ((MLIST) $FORM) $LIST2) T $ANS))))
    MEXPR) 
(ADD2LNC '(($UPDATE) $FORM $COMPLEMENT) $FUNCTIONS) 
(MDEFPROP $EXPNLENGTH
    ((LAMBDA) ((MLIST) $EXPR)
     ((MPROG) ((MLIST) ((MSETQ) $INFLAG NIL))
      ((MCOND) (($ATOM) $EXPR) 1. T
       ((MPLUS) 1. (($ARGSLENGTH) (($ARGS) $EXPR))))))
    MEXPR) 
(ADD2LNC '(($EXPNLENGTH) $EXPR) $FUNCTIONS) 
(MDEFPROP $ARGSLENGTH
    ((LAMBDA) ((MLIST) $ARGS)
     (($APPLY) "+" (($MAP) ((MQUOTE) $EXPNLENGTH) $ARGS)))
    MEXPR) 
(ADD2LNC '(($ARGSLENGTH) $ARGS) $FUNCTIONS) 
(MDEFPROP $EV_DIFF
    ((LAMBDA) ((MLIST) $_EXPR_)
     (($APPLY) ((MQUOTE) $EV) ((MLIST) $_EXPR_ ((MQUOTE) $DIFF))))
    MEXPR) 
(ADD2LNC '(($EV_DIFF) $_EXPR_) $FUNCTIONS) 
(MDEFPROP $SCALEFACTORS
    ((LAMBDA) ((MLIST) $TRANSFORMATION)
     ((MPROG)
      ((MCOND) (($LISTP) (($FIRST) $TRANSFORMATION))
       ((MPROGN) ((MSETQ) $COORDINATES (($REST) $TRANSFORMATION))
        ((MSETQ) $TRANSFORMATION (($FIRST) $TRANSFORMATION)))
       T ((MSETQ) $COORDINATES (($LISTOFVARS) $TRANSFORMATION)))
      ((MSETQ) $DIMENSION (($LENGTH) $COORDINATES))
      ((MSETQ) $DIMENIMBED (($LENGTH) $TRANSFORMATION))
      ((MDO) $ROW 1. NIL NIL $DIMENSION NIL
       ((MDO) $COL 1. NIL NIL $DIMENIMBED NIL
        ((MSETQ) (($JACOBIAN ARRAY) $ROW $COL)
         (($TRIGSIMP)
          (($RATSIMP)
           (($DIFF) (($TRANSFORMATION ARRAY) $COL)
            (($COORDINATES ARRAY) $ROW)))))))
      ((MSETQ) $SFPROD 1.)
      ((MDO) $ROW 1. NIL NIL $DIMENSION NIL
       ((MPROGN)
        ((MDO) $COL 1. NIL NIL ((MPLUS) $ROW ((MMINUS) 1.)) NIL
         ((MPROGN) ((MSETQ) (($SF ARRAY) $ROW) (($GCOV) $ROW $COL))
          ((MCOND) ((MNOTEQUAL) (($SF ARRAY) $ROW) 0.)
           (($PRINT)
            "warning: coordinate system is nonorthogonal unless following simplifies to zero:"
            (($SF ARRAY) $ROW))
           T $FALSE)))
        ((MSETQ) (($SF ARRAY) $ROW)
         (($RADCAN) ((%SQRT) (($GCOV) $ROW $ROW))))
        ((MSETQ) $SFPROD ((MTIMES) $SFPROD (($SF ARRAY) $ROW)))))))
    MEXPR) 
(ADD2LNC '(($SCALEFACTORS) $TRANSFORMATION) $FUNCTIONS) 
(MDEFPROP $GCOV
    ((LAMBDA) ((MLIST) $II $JJ)
     (($TRIGSIMP)
      (($RATSIMP)
       (($SUM)
        ((MTIMES) (($JACOBIAN ARRAY) $II $KK)
         (($JACOBIAN ARRAY) $JJ $KK))
        $KK 1. $DIMENIMBED))))
    MEXPR) 
(ADD2LNC '(($GCOV) $II $JJ) $FUNCTIONS) 
(MDEFPROP $EXPRESS1
    ((LAMBDA) ((MLIST) $EXPN)
     ((MPROG) ((MLIST) $ANS)
      ((MCOND) (($MAPATOM) $EXPN)
       ((MCOND) (($NONSCALARP) $EXPN)
        ((MPROGN) ((MSETQ) $ANS ((MLIST)))
         ((MDO) $JJ $DIMENSION ((MMINUS) 1.) NIL 1. NIL
          ((MSETQ) $ANS
           (($CONS) (($EXPN ARRAY) (($COORDINATES ARRAY) $JJ)) $ANS)))
         ((MRETURN) $ANS))
        T ((MRETURN) $EXPN))
       T $FALSE)
      ((MSETQ) $EXPN (($MAP) ((MQUOTE) $EXPRESS1) $EXPN))
      ((MCOND) ((MOR) (($MAPATOM) $EXPN) (($LISTP) $EXPN))
       ((MRETURN) $EXPN) T $FALSE)
      ((MCOND) ((MEQUAL) (($INPART) $EXPN 0.) "grad")
       ((MPROGN) ((MSETQ) $ANS ((MLIST)))
        ((MSETQ) $EXPN (($INPART) $EXPN 1.))
        ((MDO) $JJ $DIMENSION ((MMINUS) 1.) NIL 1. NIL
         ((MSETQ) $ANS
          (($CONS)
           ((MQUOTIENT)
            ((%DERIVATIVE) $EXPN (($COORDINATES ARRAY) $JJ))
            (($SF ARRAY) $JJ))
           $ANS)))
        ((MRETURN) $ANS))
       T $FALSE)
      ((MCOND) ((MEQUAL) $PIECE "div")
       ((MPROGN) ((MSETQ) $EXPN (($INPART) $EXPN 1.))
        ((MCOND) ((MNOT) (($LISTP) $EXPN))
         (($ERROR) "div called on scalar arg:" $EXPN) T $FALSE)
        ((MRETURN)
         ((MQUOTIENT)
          (($SUM)
           ((%DERIVATIVE)
            ((MQUOTIENT) ((MTIMES) $SFPROD (($EXPN ARRAY) $JJ))
             (($SF ARRAY) $JJ))
            (($COORDINATES ARRAY) $JJ))
           $JJ 1. $DIMENSION)
          $SFPROD)))
       T $FALSE)
      ((MCOND) ((MEQUAL) $PIECE "laplacian")
       ((MRETURN)
        ((MQUOTIENT)
         (($SUM)
          ((%DERIVATIVE)
           ((MQUOTIENT)
            ((MTIMES) $SFPROD
             ((%DERIVATIVE) (($INPART) $EXPN 1.)
              (($COORDINATES ARRAY) $JJ)))
            ((MEXPT) (($SF ARRAY) $JJ) 2.))
           (($COORDINATES ARRAY) $JJ))
          $JJ 1. $DIMENSION)
         $SFPROD))
       T $FALSE)
      ((MCOND) ((MEQUAL) $PIECE "curl")
       ((MPROGN) ((MSETQ) $EXPN (($INPART) $EXPN 1.))
        ((MCOND) (($LISTP) $EXPN)
         ((MPROGN)
          ((MCOND) ((MEQUAL) (($LENGTH) $EXPN) 2.)
           ((MRETURN)
            ((MQUOTIENT)
             ((MQUOTIENT)
              ((MPLUS)
               ((%DERIVATIVE)
                ((MTIMES) (($SF ARRAY) 2.) (($EXPN ARRAY) 2.))
                (($COORDINATES ARRAY) 1.))
               ((MMINUS)
                ((%DERIVATIVE)
                 ((MTIMES) (($SF ARRAY) 1.) (($EXPN ARRAY) 1.))
                 (($COORDINATES ARRAY) 2.))))
              (($SF ARRAY) 1.))
             (($SF ARRAY) 2.)))
           T $FALSE)
          ((MCOND) ((MEQUAL) $DIMENSION 3.)
           ((MRETURN)
            ((MLIST)
             ((MQUOTIENT)
              ((MQUOTIENT)
               ((MPLUS)
                ((%DERIVATIVE)
                 ((MTIMES) (($SF ARRAY) 3.) (($EXPN ARRAY) 3.))
                 (($COORDINATES ARRAY) 2.))
                ((MMINUS)
                 ((%DERIVATIVE)
                  ((MTIMES) (($SF ARRAY) 2.) (($EXPN ARRAY) 2.))
                  (($COORDINATES ARRAY) 3.))))
               (($SF ARRAY) 2.))
              (($SF ARRAY) 3.))
             ((MQUOTIENT)
              ((MQUOTIENT)
               ((MPLUS)
                ((%DERIVATIVE)
                 ((MTIMES) (($SF ARRAY) 1.) (($EXPN ARRAY) 1.))
                 (($COORDINATES ARRAY) 3.))
                ((MMINUS)
                 ((%DERIVATIVE)
                  ((MTIMES) (($SF ARRAY) 3.) (($EXPN ARRAY) 3.))
                  (($COORDINATES ARRAY) 1.))))
               (($SF ARRAY) 1.))
              (($SF ARRAY) 3.))
             ((MQUOTIENT)
              ((MQUOTIENT)
               ((MPLUS)
                ((%DERIVATIVE)
                 ((MTIMES) (($SF ARRAY) 2.) (($EXPN ARRAY) 2.))
                 (($COORDINATES ARRAY) 1.))
                ((MMINUS)
                 ((%DERIVATIVE)
                  ((MTIMES) (($SF ARRAY) 1.) (($EXPN ARRAY) 1.))
                  (($COORDINATES ARRAY) 2.))))
               (($SF ARRAY) 1.))
              (($SF ARRAY) 2.))))
           T $FALSE))
         T $FALSE)
        (($ERROR) "curl used in space of wrong dimension"))
       T $FALSE)
      ((MCOND) ((MEQUAL) $PIECE "~")
       ((MPROGN) ((MSETQ) $ANS (($INPART) $EXPN 1.))
        ((MSETQ) $EXPN (($INPART) $EXPN 2.))
        ((MCOND)
         ((MAND) (($LISTP) $ANS) (($LISTP) $EXPN)
          ((MEQUAL) (($LENGTH) $ANS) (($LENGTH) $EXPN)))
         ((MPROGN)
          ((MCOND) ((MEQUAL) (($LENGTH) $ANS) 2.)
           ((MRETURN)
            ((MPLUS) ((MTIMES) (($ANS ARRAY) 1.) (($EXPN ARRAY) 2.))
             ((MMINUS) ((MTIMES) (($ANS ARRAY) 2.) (($EXPN ARRAY) 1.)))))
           T $FALSE)
          ((MCOND) ((MEQUAL) (($LENGTH) $ANS) 3.)
           ((MRETURN)
            ((MLIST)
             ((MPLUS) ((MTIMES) (($ANS ARRAY) 2.) (($EXPN ARRAY) 3.))
              ((MMINUS)
               ((MTIMES) (($ANS ARRAY) 3.) (($EXPN ARRAY) 2.))))
             ((MPLUS) ((MTIMES) (($ANS ARRAY) 3.) (($EXPN ARRAY) 1.))
              ((MMINUS)
               ((MTIMES) (($ANS ARRAY) 1.) (($EXPN ARRAY) 3.))))
             ((MPLUS) ((MTIMES) (($ANS ARRAY) 1.) (($EXPN ARRAY) 2.))
              ((MMINUS)
               ((MTIMES) (($ANS ARRAY) 2.) (($EXPN ARRAY) 1.))))))
           T $FALSE))
         T $FALSE)
        (($ERROR) "~ used with improper arguments:" $ANS $EXPN))
       T $FALSE)
      $EXPN))
    MEXPR) 
(ADD2LNC '(($EXPRESS1) $EXPN) $FUNCTIONS) 
(MDEFPROP $VECTORSIMP
    ((LAMBDA) ((MLIST) $EXPN)
     ((MPROG)
      ((MLIST) $DOTDISTRIB $DOTSCRULES $INFLAG $FIRSTCROSSSCALAR)
      ((MSETQ) $INFLAG ((MSETQ) $FIRSTCROSSSCALAR T))
      ((MSETQ) $DOTDISTRIB
       ((MOR) $EXPANDALL $EXPANDDOT $EXPANDDOTPLUS $EXPANDPLUS))
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDGRAD $EXPANDGRADPLUS $EXPANDPLUS)
       (($DECLARE) "grad" $ADDITIVE) T $FALSE)
      ((MCOND) ((MOR) $EXPANDALL $EXPANDDIV $EXPANDDIVPLUS $EXPANDPLUS)
       (($DECLARE) "div" $ADDITIVE) T $FALSE)
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDCURL $EXPANDCURLPLUS $EXPANDPLUS)
       (($DECLARE) "curl" $ADDITIVE) T $FALSE)
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDLAPLACIAN $EXPANDLAPLACIANPLUS
        $EXPANDPLUS)
       (($DECLARE) "laplacian" $ADDITIVE) T $FALSE)
      ((MSETQ) $EXPN (($VSIMP) $EXPN))
      ((MCOND) $EXPANDALL ((MSETQ) $EXPN (($RATEXPAND) $EXPN)) T
       $FALSE)
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDGRAD $EXPANDGRADPLUS $EXPANDPLUS)
       (($REMOVE) "grad" $ADDITIVE) T $FALSE)
      ((MCOND) ((MOR) $EXPANDALL $EXPANDDIV $EXPANDDIVPLUS $EXPANDPLUS)
       (($REMOVE) "div" $ADDITIVE) T $FALSE)
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDCURL $EXPANDCURLPLUS $EXPANDPLUS)
       (($REMOVE) "curl" $ADDITIVE) T $FALSE)
      ((MCOND)
       ((MOR) $EXPANDALL $EXPANDLAPLACIAN $EXPANDLAPLACIANPLUS
        $EXPANDPLUS)
       (($REMOVE) "laplacian" $ADDITIVE) T $FALSE)
      $EXPN))
    MEXPR) 
(ADD2LNC '(($VECTORSIMP) $EXPN) $FUNCTIONS) 
(MDEFPROP $BEFORE
    ((LAMBDA) ((MLIST) $ARG)
     ((MNOTEQUAL) (($INPART) (($ORDER) $ETRUE $ARG) 1.) $ETRUE))
    MEXPR) 
(ADD2LNC '(($BEFORE) $ARG) $FUNCTIONS) 
(MDEFPROP $VSCALARP
    ((LAMBDA) ((MLIST) $ARG) ((MNOT) (($NONSCALARP) $ARG))) MEXPR) 
(ADD2LNC '(($VSCALARP) $ARG) $FUNCTIONS) 
(MDEFPROP $VSIMP
    ((LAMBDA) ((MLIST) $EXPN)
     ((MCOND) (($MAPATOM) $EXPN) $EXPN T
      ((MPROG) ((MLIST) $PV $QV $RV $SV)
       ((MSETQ) $EXPN (($MAP) ((MQUOTE) $VSIMP) $EXPN))
       ((MCOND) (($MAPATOM) $EXPN) ((MRETURN) $EXPN) T $FALSE)
       ((MCOND) ((MEQUAL) (($INPART) $EXPN 0.) "~")
        ((MSETQ) $EXPN (($REMOVECROSSSC1) $EXPN $PV $RV $SV)) T
        ((MCOND) ((MEQUAL) $PIECE "grad")
         ((MCOND)
          ((MAND)
           ((MOR) $EXPANDALL $EXPANDGRAD $EXPANDGRADPROD $EXPANDPROD)
           ((MNOT) (($MAPATOM) ((MSETQ) $PV (($INPART) $EXPN 1.))))
           ((MEQUAL) (($INPART) $PV 0.) "*"))
          ((MSETQ) $EXPN
           (($APPLY) "+"
            (($MAPLIST) ((LAMBDA) ((MLIST) $U) (($GRADPROD) $U $PV))
             $PV)))
          T $FALSE)
         T
         ((MCOND) ((MEQUAL) $PIECE "div")
          ((MCOND)
           ((MAND)
            ((MOR) $EXPANDALL $EXPANDDIV $EXPANDDIVPROD $EXPANDPROD)
            ((MNOT) (($MAPATOM) ((MSETQ) $PV (($INPART) $EXPN 1.))))
            ((MEQUAL) (($INPART) $PV 0.) "*"))
           ((MSETQ) $EXPN
            (($APPLY) "+"
             (($MAPLIST) ((LAMBDA) ((MLIST) $U) (($DIVPROD) $U $PV))
              $PV)))
           T $FALSE)
          T
          ((MCOND) ((MEQUAL) $PIECE "curl")
           ((MCOND)
            ((MAND) ((MOR) $EXPANDALL $EXPANDCURL $EXPANDCURLCURL)
             ((MNOT) (($MAPATOM) ((MSETQ) $PV (($INPART) $EXPN 1.))))
             ((MEQUAL) (($INPART) $PV 0.) "curl"))
            ((MSETQ) $EXPN
             ((MPLUS)
              (($GRAD) (($DIV) ((MSETQ) $PV (($INPART) $PV 1.))))
              ((MMINUS) (($LAPLACIAN) $PV))))
            T $FALSE)
           T
           ((MCOND) ((MEQUAL) $PIECE "laplacian")
            ((MCOND) $EXPANDLAPLACIANTODIVGRAD
             ((MSETQ) $EXPN (($DIV) (($GRAD) (($INPART) $EXPN 1.)))) T
             ((MCOND)
              ((MAND)
               ((MOR) $EXPANDALL $EXPANDLAPLACIAN $EXPANDLAPLACIANPROD
                $EXPANDPROD)
               ((MNOT) (($MAPATOM) ((MSETQ) $PV (($INPART) $EXPN 1.))))
               ((MEQUAL) (($INPART) $PV 0.) "*"))
              ((MPROGN) ((MSETQ) $QV (($INPART) $PV 1.))
               ((MSETQ) $RV (($DELETE) $QV $PV))
               ((MSETQ) $EXPN
                ((MPLUS) ((MTIMES) $RV (($LAPLACIAN) $QV))
                 ((MTIMES) 2. (($GRAD) $RV) (($GRAD) $QV))
                 ((MTIMES) $QV (($LAPLACIAN) $RV)))))
              T $FALSE))
            T $FALSE)))))
       $EXPN)))
    MEXPR) 
(ADD2LNC '(($VSIMP) $EXPN) $FUNCTIONS) 
(MDEFPROP $CROSSSIMP
    ((LAMBDA) ((MLIST) $EX $PV $RV $SV)
     ((MCOND)
      ((MAND) ((MNOT) (($MAPATOM) $EX))
       ((MEQUAL) (($INPART) $EX 0.) "~"))
      ((MPROGN)
       ((MCOND) ((MOR) $EXPANDALL $EXPANDCROSS $EXPANDCROSSCROSS)
        ((MSETQ) $EX (($TRYCROSSCROSS) $EX $PV $RV $SV)) T $FALSE)
       ((MCOND)
        ((MAND) ((MNOT) (($MAPATOM) $EX))
         ((MEQUAL) (($INPART) $EX 0.) "~")
         ((MOR) $EXPANDALL $EXPANDCROSS $EXPANDCROSSPLUS $EXPANDPLUS))
        ((MSETQ) $EX (($TRYCROSSPLUS) $EX $PV $RV $SV)) T $FALSE)
       $EX)
      T $EX))
    MEXPR) 
(ADD2LNC '(($CROSSSIMP) $EX $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $REMOVECROSSSC
    ((LAMBDA) ((MLIST) $EXPN $PV $RV $SV)
     ((MCOND)
      ((MAND) ((MNOT) (($MAPATOM) $EXPN))
       ((MEQUAL) (($INPART) $EXPN 0.) "~"))
      (($REMOVECROSSSC1) $EXPN $PV $RV $SV) T $EXPN))
    MEXPR) 
(ADD2LNC '(($REMOVECROSSSC) $EXPN $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $REMOVECROSSSC1
    ((LAMBDA) ((MLIST) $EXPN $PV $RV $SV)
     ((MPROG) ((MLIST) $LEFT $RIGHT)
      ((MSETQ) $LEFT (($PARTITIONSC) (($INPART) $EXPN 1.)))
      ((MSETQ) $RIGHT (($PARTITIONSC) (($INPART) $EXPN 2.)))
      ((MCOND)
       ((MAND) $FIRSTCROSSSCALAR
        ((MOR) ((MEQUAL) (($LEFT ARRAY) 2.) 1.)
         ((MEQUAL) (($RIGHT ARRAY) 2.) 1.)))
       ((MPROGN)
        (($PRINT)
         "warning: declare vector indeterminants 
nonscalar to avoid errors & to get full simplification")
        ((MSETQ) $FIRSTCROSSSCALAR NIL) ((MRETURN) $EXPN))
       T $FALSE)
      ((MTIMES) (($LEFT ARRAY) 1.) (($RIGHT ARRAY) 1.)
       (($CROSSSIMP) (($~) (($LEFT ARRAY) 2.) (($RIGHT ARRAY) 2.)) $PV
        $RV $SV))))
    MEXPR) 
(ADD2LNC '(($REMOVECROSSSC1) $EXPN $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $PARTITIONSC
    ((LAMBDA) ((MLIST) $EX)
     ((MCOND) (($MAPATOM) $EX)
      ((MCOND) (($NONSCALARP) $EX) ((MLIST) 1. $EX) T ((MLIST) $EX 1.))
      T
      ((MCOND) ((MEQUAL) (($INPART) $EX 0.) "*")
       ((MPROG) ((MLIST) $SC $NONSC) ((MSETQ) $SC ((MSETQ) $NONSC 1.))
        ((MDOIN) $FACT $EX NIL NIL NIL NIL
         ((MCOND) (($NONSCALARP) $FACT)
          ((MSETQ) $NONSC ((MTIMES) $NONSC $FACT)) T
          ((MSETQ) $SC ((MTIMES) $SC $FACT))))
        ((MLIST) $SC $NONSC))
       T ((MLIST) 1. $EX))))
    MEXPR) 
(ADD2LNC '(($PARTITIONSC) $EX) $FUNCTIONS) 
(MDEFPROP $TRYCROSSPLUS
    ((LAMBDA) ((MLIST) $EXPN $PV $RV $SV)
     ((MPROGN) ((MSETQ) $PV (($INPART) $EXPN 1.))
      ((MSETQ) $RV (($INPART) $EXPN 2.))
      ((MCOND)
       ((MAND) ((MNOT) (($MAPATOM) $PV))
        ((MEQUAL) (($INPART) $PV 0.) "+"))
       (($MAP) ((LAMBDA) ((MLIST) $U) (($CROSSRV) $U $RV $SV)) $PV) T
       ((MCOND)
        ((MAND) ((MNOT) (($MAPATOM) $RV))
         ((MEQUAL) (($INPART) $RV 0.) "+"))
        (($MAP) ((LAMBDA) ((MLIST) $U) (($PVCROSS) $PV $U $SV)) $RV) T
        $EXPN))))
    MEXPR) 
(ADD2LNC '(($TRYCROSSPLUS) $EXPN $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $TRYCROSSCROSS
    ((LAMBDA) ((MLIST) $EXPN $PV $RV $SV)
     ((MPROGN) ((MSETQ) $PV (($INPART) $EXPN 1.))
      ((MSETQ) $RV (($INPART) $EXPN 2.))
      ((MCOND)
       ((MAND) ((MNOT) (($MAPATOM) $RV))
        ((MEQUAL) (($INPART) $RV 0.) "~"))
       ((MPROGN) ((MSETQ) $SV (($INPART) $RV 2.))
        ((MSETQ) $RV (($INPART) $RV 1.))
        ((MPLUS) ((MTIMES) $RV ((MNCTIMES) $PV $SV))
         ((MMINUS) ((MTIMES) $SV ((MNCTIMES) $PV $RV)))))
       T
       ((MCOND)
        ((MAND) ((MNOT) (($MAPATOM) $PV))
         ((MEQUAL) (($INPART) $PV 0.) "~"))
        ((MPROGN) ((MSETQ) $SV (($INPART) $PV 2.))
         ((MSETQ) $PV (($INPART) $PV 1.))
         ((MPLUS) ((MTIMES) $SV ((MNCTIMES) $RV $PV))
          ((MMINUS) ((MTIMES) $PV ((MNCTIMES) $RV $SV)))))
        T $EXPN))))
    MEXPR) 
(ADD2LNC '(($TRYCROSSCROSS) $EXPN $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $PVCROSS
    ((LAMBDA) ((MLIST) $PV $RV $SV)
     (($REMOVECROSSSC) (($~) $PV $RV) $PV $RV $SV))
    MEXPR) 
(ADD2LNC '(($PVCROSS) $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $CROSSRV
    ((LAMBDA) ((MLIST) $PV $RV $SV)
     (($REMOVECROSSSC) (($~) $PV $RV) $PV $RV $SV))
    MEXPR) 
(ADD2LNC '(($CROSSRV) $PV $RV $SV) $FUNCTIONS) 
(MDEFPROP $GRADPROD
    ((LAMBDA) ((MLIST) $UU $PV)
     ((MTIMES) (($DELETE) $UU $PV) (($GRAD) $UU)))
    MEXPR) 
(ADD2LNC '(($GRADPROD) $UU $PV) $FUNCTIONS) 
(MDEFPROP $DIVPROD
    ((LAMBDA) ((MLIST) $UU $PV)
     ((MPROG) ((MLIST) $DOTSCRULES) ((MSETQ) $DOTSCRULES NIL)
      ((MCOND) (($NONSCALARP) $UU)
       ((MTIMES) (($DELETE) $UU $PV) (($DIV) $UU)) T
       ((MNCTIMES) (($DELETE) $UU $PV) (($GRAD) $UU)))))
    MEXPR) 
(ADD2LNC '(($DIVPROD) $UU $PV) $FUNCTIONS) 
(MDEFPROP $POTENTIAL1
    ((LAMBDA) ((MLIST) $GR)
     ((MPROG) ((MLIST) $ORIGIN $GRPERM $JJ $RESULT $%DUM)
      ((MCOND)
       ((MOR) ((MNOT) (($LISTP) $GR))
        ((MNOTEQUAL) (($LENGTH) $GR) $DIMENSION))
       (($ERROR)
        "1st arg of potential must be a list of length equal to"
        "the dimensionality of the coordinate system")
       T $FALSE)
      ((MSETQ) $ORIGIN (($ZEROLOC))) ((MSETQ) $RESULT ((MLIST)))
      ((MDO) $JJ $DIMENSION ((MMINUS) 1.) NIL 1. NIL
       ((MSETQ) $RESULT
        (($CONS) ((MTIMES) (($SF ARRAY) $JJ) (($GR ARRAY) $JJ))
         $RESULT)))
      ((MSETQ) $GRPERM ((MLIST)))
      ((MDOIN) $EQN $ORIGIN NIL NIL NIL NIL
       ((MPROGN) ((MSETQ) $JJ 1.)
        ((MDO) NIL NIL NIL NIL NIL
         ((MNOT)
          ((MNOTEQUAL) (($LHS) $EQN) (($COORDINATES ARRAY) $JJ)))
         ((MSETQ) $JJ ((MPLUS) $JJ 1.)))
        ((MSETQ) $GRPERM (($ENDCONS) (($RESULT ARRAY) $JJ) $GRPERM))))
      ((MSETQ) $RESULT
       (($SUM)
        (($MYINT) (($SUBLESS) $JJ $ORIGIN $GRPERM) $%DUM
         (($RHS) (($ORIGIN ARRAY) $JJ)) (($LHS) (($ORIGIN ARRAY) $JJ)))
        $JJ 1. $DIMENSION))
      ((MSETQ) $GR
       ((MPLUS) $GR ((MMINUS) (($EXPRESS1) (($GRAD) $RESULT)))))
      ((MSETQ) $GR (($EV_DIFF) $GR))
      ((MSETQ) $GR (($TRIGSIMP) (($RADCAN) $GR))) ((MSETQ) $ORIGIN 1.)
      ((MDO) NIL NIL NIL NIL NIL
       ((MNOT)
        ((MAND) ((MLEQP) $ORIGIN $DIMENSION)
         ((MEQUAL) (($GR ARRAY) $ORIGIN) 0.)))
       ((MPROGN) (($MODEDECLARE) $ORIGIN $FIXNUM)
        ((MSETQ) $ORIGIN ((MPLUS) $ORIGIN 1.))))
      ((MCOND) ((MLEQP) $ORIGIN $DIMENSION)
       (($PRINT) "unable to prove that the"
        "following difference between the input and the gradient"
        "of the returned result is zero" $GR)
       T $FALSE)
      (($TRIGSIMP) (($RADCAN) $RESULT))))
    MEXPR) 
(ADD2LNC '(($POTENTIAL1) $GR) $FUNCTIONS) 
(MDEFPROP $ZEROLOC
    ((LAMBDA) ((MLIST))
     ((MCOND) ((MNOT) (($LISTP) $POTENTIALZEROLOC))
      (($MAP) ((LAMBDA) ((MLIST) $UU) ((MEQUAL) $UU $POTENTIALZEROLOC))
       $COORDINATES)
      T
      ((MCOND)
       ((MNOTEQUAL)
        (($DISJUNCT) $COORDINATES
         (($MAP) ((MQUOTE) $LHS) $POTENTIALZEROLOC))
        ((MLIST)))
       (($ERROR) "potentialzeroloc must be a list of length"
        "equaling the dimensionality of the coordinate system"
        "containing equations with each coordinate variable"
        "on the lhs of exactly 1 equation,"
        "or else potentialzeroloc must not be a list")
       T $POTENTIALZEROLOC)))
    MEXPR) 
(ADD2LNC '(($ZEROLOC)) $FUNCTIONS) 
(MDEFPROP $VPOT
    ((LAMBDA) ((MLIST) $KURL)
     ((MPROG) ((MLIST) $ORIGIN $SHIFT) (($MODEDECLARE) $SHIFT $FIXNUM)
      ((MCOND)
       ((MOR) ((MNOT) (($LISTP) $KURL))
        ((MNOTEQUAL) (($LENGTH) $KURL) 3.))
       (($ERROR)
        "1st arg of vectorpotential must be a list of length 3")
       T $FALSE)
      ((MSETQ) $ORIGIN (($ZEROLOC))) ((MSETQ) $SHIFT 1.)
      ((MDO) NIL NIL NIL NIL NIL
       ((MNOT)
        ((MAND) ((MLEQP) $SHIFT 3.)
         ((MNOTEQUAL) (($LHS) (($ORIGIN ARRAY) 1.))
          (($COORDINATES ARRAY) $SHIFT))))
       ((MSETQ) $SHIFT ((MPLUS) $SHIFT 1.)))
      ((MSETQ) $SHIFT ((MPLUS) $SHIFT 1.))
      ((MCOND)
       ((MOR) ((MGREATERP) $SHIFT 4.)
        ((MNOTEQUAL) (($LHS) (($ORIGIN ARRAY) 2.))
         (($COORDINATES ARRAY) (($CYC) 2.)))
        ((MNOTEQUAL) (($LHS) (($ORIGIN ARRAY) 3.))
         (($COORDINATES ARRAY) (($CYC) 3.))))
       (($ERROR) "left sides of potentialzeroloc must be a cyclic"
        "permutation of coordinates")
       T $FALSE)
      ((MSETQ) $ORIGIN
       ((MLIST)
        ((MQUOTIENT)
         ((MPLUS)
          (($MYINT)
           ((MTIMES) (($SF ARRAY) (($CYC) 1.))
            (($SF ARRAY) (($CYC) 3.)) (($KURL ARRAY) (($CYC) 2.)))
           (($LHS) (($ORIGIN ARRAY) 3.)) (($RHS) (($ORIGIN ARRAY) 3.))
           (($LHS) (($ORIGIN ARRAY) 3.)))
          ((MMINUS)
           (($MYINT)
            ((MTIMES) (($SF ARRAY) (($CYC) 1.))
             (($SF ARRAY) (($CYC) 2.))
             (($SUBSTITUTE) (($ORIGIN ARRAY) 3.)
              (($KURL ARRAY) (($CYC) 3.))))
            (($LHS) (($ORIGIN ARRAY) 2.)) (($RHS) (($ORIGIN ARRAY) 2.))
            (($LHS) (($ORIGIN ARRAY) 2.)))))
         (($SF ARRAY) (($CYC) 1.)))
        ((MQUOTIENT)
         ((MMINUS)
          (($MYINT)
           ((MTIMES) (($SF ARRAY) (($CYC) 2.))
            (($SF ARRAY) (($CYC) 3.)) (($KURL ARRAY) (($CYC) 1.)))
           (($LHS) (($ORIGIN ARRAY) 3.)) (($RHS) (($ORIGIN ARRAY) 3.))
           (($LHS) (($ORIGIN ARRAY) 3.))))
         (($SF ARRAY) (($CYC) 2.)))
        0.))
      ((MSETQ) $ORIGIN
       ((MLIST) (($ORIGIN ARRAY) (($CYC) (($CYC) 1.)))
        (($ORIGIN ARRAY) (($CYC) (($CYC) 2.)))
        (($ORIGIN ARRAY) (($CYC) (($CYC) 3.)))))
      ((MSETQ) $KURL
       ((MPLUS) $KURL ((MMINUS) (($EXPRESS1) (($CURL) $ORIGIN)))))
      ((MSETQ) $KURL (($EV_DIFF) $KURL))
      ((MSETQ) $KURL (($TRIGSIMP) (($RADCAN) $KURL)))
      ((MDO) $JJ 1. NIL NIL 3. NIL
       ((MCOND) ((MNOTEQUAL) (($KURL ARRAY) $JJ) 0.)
        (($PRINT)
         "unable to prove that the following difference between a"
         "component of the input and of the curl output is zero"
         (($KURL ARRAY) $JJ))
        T $FALSE))
      $ORIGIN))
    MEXPR) 
(ADD2LNC '(($VPOT) $KURL) $FUNCTIONS) 
(MDEFPROP $DISJUNCT
    ((LAMBDA) ((MLIST) $L1 $L2)
     (($APPEND) (($SETDIFF) $L1 $L2) (($SETDIFF) $L2 $L1)))
    MEXPR) 
(ADD2LNC '(($DISJUNCT) $L1 $L2) $FUNCTIONS) 
(MDEFPROP $SETDIFF
    ((LAMBDA) ((MLIST) $L1 $L2)
     ((MCOND) ((MEQUAL) $L1 ((MLIST))) ((MLIST)) T
      ((MCOND) (($MEMBER) (($FIRST) $L1) $L2)
       (($SETDIFF) (($REST) $L1) $L2) T
       (($CONS) (($FIRST) $L1) (($SETDIFF) (($REST) $L1) $L2)))))
    MEXPR) 
(ADD2LNC '(($SETDIFF) $L1 $L2) $FUNCTIONS) 
(MDEFPROP $SUBLESS
    ((LAMBDA) ((MLIST) $KK $ORIGIN $GRPERM)
     ((MPROGN) (($MODEDECLARE) $KK $FIXNUM)
      ((MPROG) ((MLIST) $ANS $%DUM)
       ((MSETQ) $ANS
        (($RATSUBST) $%DUM (($LHS) (($ORIGIN ARRAY) $KK))
         (($GRPERM ARRAY) $KK)))
       ((MDO) $L1 1. NIL NIL ((MPLUS) $KK ((MMINUS) 1.)) NIL
        ((MSETQ) $ANS
         (($RATSUBST) (($RHS) (($ORIGIN ARRAY) $L1))
          (($LHS) (($ORIGIN ARRAY) $L1)) $ANS)))
       $ANS)))
    MEXPR) 
(ADD2LNC '(($SUBLESS) $KK $ORIGIN $GRPERM) $FUNCTIONS) 
(MDEFPROP $MYINT
    ((LAMBDA) ((MLIST) $FUN $VAR $LOW $HIGH)
     ((MPROG) ((MLIST) $RESULT $ATLOW $ATHIGH)
      ((MSETQ) $RESULT (($INTEGRATE) $FUN $VAR))
      ((MCOND) (($FREEOF) (($NOUNIFY) ((MQUOTE) $INTEGRATE)) $RESULT)
       ((MPROGN) ((MSETQ) $ATLOW (($EVLIMIT) $RESULT $VAR $LOW))
        ((MCOND) ((MEQUAL) $ATLOW NIL) ((MGO) $NOGOOD) T $FALSE)
        ((MSETQ) $ATHIGH (($EVLIMIT) $RESULT $VAR $HIGH))
        ((MCOND) ((MEQUAL) $ATHIGH NIL) ((MGO) $NOGOOD) T $FALSE)
        ((MRETURN) (($RADCAN) ((MPLUS) $ATHIGH ((MMINUS) $ATLOW)))))
       T $FALSE)
      $NOGOOD (($DEFINT) $FUN $VAR $LOW $HIGH)))
    MEXPR) 
(ADD2LNC '(($MYINT) $FUN $VAR $LOW $HIGH) $FUNCTIONS) 
(MDEFPROP $EVLIMIT
    ((LAMBDA) ((MLIST) $EXPR $VAR $LIM)
     ((MPROG) ((MLIST) $TEMP)
      ((MCOND)
       ((MOR) ((MEQUAL) $LIM ((MQUOTE) $MINF))
        ((MEQUAL) $LIM ((MQUOTE) $INF)))
       ((MGO) $USELIMIT) T $FALSE)
      ((MSETQ) $TEMP (($ERRCATCH) (($SUBSTITUTE) $LIM $VAR $EXPR)))
      ((MCOND) ((MNOTEQUAL) $TEMP ((MLIST)))
       ((MRETURN) (($TEMP ARRAY) 1.)) T $FALSE)
      $USELIMIT ((MSETQ) $TEMP (($LIMIT) $EXPR $VAR $LIM))
      ((MCOND)
       (($MEMBER) $TEMP
        ((MQUOTE) ((MLIST) $INF $MINF $UND $IND $INFINITY)))
       ((MRETURN) NIL) T $FALSE)
      ((MCOND) (($FREEOF) (($NOUNIFY) ((MQUOTE) $LIMIT)) $TEMP) $TEMP T
       $FALSE)))
    MEXPR) 
(ADD2LNC '(($EVLIMIT) $EXPR $VAR $LIM) $FUNCTIONS) 
(MDEFPROP $CYC
    ((LAMBDA) ((MLIST) $II)
     (($BUILDQ) ((MLIST) $II)
      ((MPLUS) 1. (($REMAINDER) ((MPLUS) $II $SHIFT) 3.))))
    MMACRO) 
(ADD2LNC '(($CYC) $II) $MACROS) 
(DSKSETQ ^W 'NIL) 
(DSKSETQ $TR_BOUND_FUNCTION_APPLYP 'NIL) 
(MDEFPROP $ETRUE (T) MATCHDECLARE) 
(ADD2LNC '$ETRUE $PROPS) 
(DSKSETQ $VECT_CROSS 'T) 
(DSKSETQ $DOTEXPTSIMP 'NIL) 
(DSKSETQ $DOTASSOC 'NIL) 
(DSKSETQ $DOTSCRULES 'T) 
(MDEFPROP $VECT (NIL $VERSION T) $PROPS) 
(ADD2LNC '$VECT $PROPS) 
(DEFPROP %SIN $SIN NOUN) 
(DEFPROP %SIN SIMP-%SIN OPERATORS) 
(ADD2LNC '%SIN $PROPS) 
(DEFPROP %SIN
         ((%SUM)
          ((MTIMES) ((MEXPT) -1. *INDEX)
           ((MEXPT) ((MFACTORIAL) ((MPLUS) ((MTIMES) 2. *INDEX) 1.))
            -1.)
           ((MEXPT) SP2VAR ((MPLUS) ((MTIMES) 2. *INDEX) 1.)))
          *INDEX 0. $INF)
         SP2) 
(ADD2LNC '%SIN $PROPS) 
(MDEFPROP %SIN
    (NIL $TYPE $TRIGONOMETRIC $COMPLEMENT_COF -1. $UNITCOF 1.
         $COMPLEMENT_FUNCTION %COS)
    $PROPS) 
(ADD2LNC '%SIN $PROPS) 
(DEFPROP $SIN %SIN VERB) 
(DEFPROP %COS $COS NOUN) 
(DEFPROP %COS SIMP-%COS OPERATORS) 
(ADD2LNC '%COS $PROPS) 
(DEFPROP %COS
         ((%SUM)
          ((MTIMES) ((MEXPT) -1. *INDEX)
           ((MEXPT) ((MFACTORIAL) ((MTIMES) 2. *INDEX)) -1.)
           ((MEXPT) SP2VAR ((MTIMES) 2. *INDEX)))
          *INDEX 0. $INF)
         SP2) 
(ADD2LNC '%COS $PROPS) 
(MDEFPROP %COS
    (NIL $TYPE $TRIGONOMETRIC $COMPLEMENT_COF -1. $UNITCOF 1.
         $COMPLEMENT_FUNCTION %SIN)
    $PROPS) 
(ADD2LNC '%COS $PROPS) 
(DEFPROP $COS %COS VERB) 
(DEFPROP %SINH $SINH NOUN) 
(DEFPROP %SINH SIMP-%SINH OPERATORS) 
(ADD2LNC '%SINH $PROPS) 
(DEFPROP %SINH
         ((%SUM)
          ((MTIMES)
           ((MEXPT) ((MFACTORIAL) ((MPLUS) ((MTIMES) 2. *INDEX) 1.))
            -1.)
           ((MEXPT) SP2VAR ((MPLUS) ((MTIMES) 2. *INDEX) 1.)))
          *INDEX 0. $INF)
         SP2) 
(ADD2LNC '%SINH $PROPS) 
(MDEFPROP %SINH
    (NIL $TYPE $HYPER_TRIGONOMETRIC $COMPLEMENT_COF 1. $UNITCOF -1.
         $COMPLEMENT_FUNCTION %COSH)
    $PROPS) 
(ADD2LNC '%SINH $PROPS) 
(DEFPROP $SINH %SINH VERB) 
(DEFPROP %COSH $COSH NOUN) 
(DEFPROP %COSH SIMP-%COSH OPERATORS) 
(ADD2LNC '%COSH $PROPS) 
(DEFPROP %COSH
         ((%SUM)
          ((MTIMES) ((MEXPT) ((MFACTORIAL) ((MTIMES) 2. *INDEX)) -1.)
           ((MEXPT) SP2VAR ((MTIMES) 2. *INDEX)))
          *INDEX 0. $INF)
         SP2) 
(ADD2LNC '%COSH $PROPS) 
(MDEFPROP %COSH
    (NIL $TYPE $HYPER_TRIGONOMETRIC $COMPLEMENT_COF 1. $UNITCOF 1.
         $COMPLEMENT_FUNCTION %SINH)
    $PROPS) 
(ADD2LNC '%COSH $PROPS) 
(DEFPROP $COSH %COSH VERB) 
(MDEFPROP $A (T) MATCHDECLARE) 
(ADD2LNC '$A $PROPS) 
(MDEFPROP $TTRUE (T) MATCHDECLARE) 
(ADD2LNC '$TTRUE $PROPS) 
(MDEFPROP $VTRUE (T) MATCHDECLARE) 
(ADD2LNC '$VTRUE $PROPS) 
(MDEFPROP $LESSP ($BEFORE) MATCHDECLARE) 
(ADD2LNC '$LESSP $PROPS) 
(MDEFPROP $SCALARM ($VSCALARP) MATCHDECLARE) 
(ADD2LNC '$SCALARM $PROPS) 
(DEFPROP $~ %~ VERB) 
(DEFPROP $~ ~RULE4 OPERATORS) 
(DEFPROP $~ "~" OP) 
(SETF (GETHASH "~" *OPR-TABLE*) '$~) 
(ADD2LNC '"~" $PROPS) 
(DEFINE-SYMBOL '"~") 
(DEFPROP $~ DIMENSION-INFIX DIMENSION) 
(DEFPROP $~ (#\Space #\~ #\Space) DISSYM) 
(DEFPROP $~ MSIZE-INFIX GRIND) 
(DEFPROP $~ 134. LBP) 
(DEFPROP $~ 133. RBP) 
(DEFPROP $~ PARSE-INFIX LED) 
(DEFPROP %~ DIMENSION-INFIX DIMENSION) 
(DEFPROP %~ (#\Space #\~ #\Space) DISSYM) 
(MDEFPROP $~ (~RULE4 ~RULE3 ~RULE2 ~RULE1 NIL) OLDRULES) 
(ADD2LNC '$~ $PROPS) 
(MDEFPROP $~ 5. RULENUM) 
(ADD2LNC '$~ $PROPS) 
(ADD2LNC '~RULE1 $RULES) 
(MDEFPROP ~RULE1 ((MEQUAL) (($~ SIMP) 0. $ETRUE) 0.) $RULE) 
(ADD2LNC '~RULE1 $PROPS) 
(MDEFPROP ~RULE1 $~ RULEOF) 
(ADD2LNC '~RULE1 $PROPS) 
(ADD2LNC '~RULE2 $RULES) 
(MDEFPROP ~RULE2 ((MEQUAL) (($~ SIMP) $ETRUE 0.) 0.) $RULE) 
(ADD2LNC '~RULE2 $PROPS) 
(MDEFPROP ~RULE2 $~ RULEOF) 
(ADD2LNC '~RULE2 $PROPS) 
(ADD2LNC '~RULE3 $RULES) 
(MDEFPROP ~RULE3 ((MEQUAL) (($~ SIMP) $ETRUE $ETRUE) 0.) $RULE) 
(ADD2LNC '~RULE3 $PROPS) 
(MDEFPROP ~RULE3 $~ RULEOF) 
(ADD2LNC '~RULE3 $PROPS) 
(ADD2LNC '~RULE4 $RULES) 
(MDEFPROP ~RULE4
    ((MEQUAL) (($~ SIMP) $ETRUE $LESSP)
     ((MTIMES SIMP) -1. (($~ SIMP) $LESSP $ETRUE)))
    $RULE) 
(ADD2LNC '~RULE4 $PROPS) 
(MDEFPROP ~RULE4 $~ RULEOF) 
(ADD2LNC '~RULE4 $PROPS) 
(DEFPROP %~ $~ NOUN) 
(DEFPROP $GRAD %GRAD VERB) 
(DEFPROP $GRAD SIMPARGS1 OPERATORS) 
(DEFPROP $GRAD T OPERS) 
(ADD2LNC '"grad" $PROPS) 
(DEFPROP $GRAD T $OUTATIVE) 
(ADD2LNC '"grad" $PROPS) 
(DEFPROP $GRAD "grad" OP) 
(SETF (GETHASH "grad" *OPR-TABLE*) '$GRAD) 
(ADD2LNC '"grad" $PROPS) 
(DEFINE-SYMBOL '"grad") 
(DEFPROP $GRAD DIMENSION-PREFIX DIMENSION) 
(DEFPROP $GRAD (#\g #\r #\a #\d #\Space) DISSYM) 
(DEFPROP $GRAD MSIZE-PREFIX GRIND) 
(DEFPROP $GRAD 142. RBP) 
(DEFPROP $GRAD PARSE-PREFIX NUD) 
(DEFPROP %GRAD DIMENSION-PREFIX DIMENSION) 
(DEFPROP %GRAD (#\g #\r #\a #\d #\Space) DISSYM) 
(DEFPROP %GRAD $GRAD NOUN) 
(DEFPROP $DIV %DIV VERB) 
(DEFPROP $DIV DIVRULE1 OPERATORS) 
(DEFPROP $DIV T OPERS) 
(ADD2LNC '"div" $PROPS) 
(DEFPROP $DIV T $OUTATIVE) 
(ADD2LNC '"div" $PROPS) 
(DEFPROP $DIV "div" OP) 
(SETF (GETHASH "div" *OPR-TABLE*) '$DIV) 
(ADD2LNC '"div" $PROPS) 
(DEFINE-SYMBOL '"div") 
(DEFPROP $DIV DIMENSION-PREFIX DIMENSION) 
(DEFPROP $DIV (#\d #\i #\v #\Space) DISSYM) 
(DEFPROP $DIV MSIZE-PREFIX GRIND) 
(DEFPROP $DIV 142. RBP) 
(DEFPROP $DIV PARSE-PREFIX NUD) 
(DEFPROP %DIV DIMENSION-PREFIX DIMENSION) 
(DEFPROP %DIV (#\d #\i #\v #\Space) DISSYM) 
(MDEFPROP $DIV (DIVRULE1 SIMPARGS1) OLDRULES) 
(ADD2LNC '$DIV $PROPS) 
(MDEFPROP $DIV 2. RULENUM) 
(ADD2LNC '$DIV $PROPS) 
(ADD2LNC 'DIVRULE1 $RULES) 
(MDEFPROP DIVRULE1 ((MEQUAL) (($DIV SIMP) (($CURL SIMP) $ETRUE)) 0.)
    $RULE) 
(ADD2LNC 'DIVRULE1 $PROPS) 
(MDEFPROP DIVRULE1 $DIV RULEOF) 
(ADD2LNC 'DIVRULE1 $PROPS) 
(DEFPROP %DIV $DIV NOUN) 
(DEFPROP $CURL %CURL VERB) 
(DEFPROP $CURL CURLRULE1 OPERATORS) 
(DEFPROP $CURL T OPERS) 
(ADD2LNC '"curl" $PROPS) 
(DEFPROP $CURL T $OUTATIVE) 
(ADD2LNC '"curl" $PROPS) 
(DEFPROP $CURL "curl" OP) 
(SETF (GETHASH "curl" *OPR-TABLE*) '$CURL) 
(ADD2LNC '"curl" $PROPS) 
(DEFINE-SYMBOL '"curl") 
(DEFPROP $CURL DIMENSION-PREFIX DIMENSION) 
(DEFPROP $CURL (#\c #\u #\r #\l #\Space) DISSYM) 
(DEFPROP $CURL MSIZE-PREFIX GRIND) 
(DEFPROP $CURL 142. RBP) 
(DEFPROP $CURL PARSE-PREFIX NUD) 
(DEFPROP %CURL DIMENSION-PREFIX DIMENSION) 
(DEFPROP %CURL (#\c #\u #\r #\l #\Space) DISSYM) 
(MDEFPROP $CURL (CURLRULE1 SIMPARGS1) OLDRULES) 
(ADD2LNC '$CURL $PROPS) 
(MDEFPROP $CURL 2. RULENUM) 
(ADD2LNC '$CURL $PROPS) 
(MDEFPROP $CURL T $NONSCALAR) 
(ADD2LNC '$CURL $PROPS) 
(ADD2LNC 'CURLRULE1 $RULES) 
(MDEFPROP CURLRULE1 ((MEQUAL) (($CURL SIMP) (($GRAD SIMP) $ETRUE)) 0.)
    $RULE) 
(ADD2LNC 'CURLRULE1 $PROPS) 
(MDEFPROP CURLRULE1 $CURL RULEOF) 
(ADD2LNC 'CURLRULE1 $PROPS) 
(DEFPROP %CURL $CURL NOUN) 
(DEFPROP $LAPLACIAN %LAPLACIAN VERB) 
(DEFPROP $LAPLACIAN SIMPARGS1 OPERATORS) 
(DEFPROP $LAPLACIAN T OPERS) 
(ADD2LNC '"laplacian" $PROPS) 
(DEFPROP $LAPLACIAN T $OUTATIVE) 
(ADD2LNC '"laplacian" $PROPS) 
(DEFPROP $LAPLACIAN "laplacian" OP) 
(SETF (GETHASH "laplacian" *OPR-TABLE*) '$LAPLACIAN) 
(ADD2LNC '"laplacian" $PROPS) 
(DEFINE-SYMBOL '"laplacian") 
(DEFPROP $LAPLACIAN DIMENSION-PREFIX DIMENSION) 
(DEFPROP $LAPLACIAN (#\l #\a #\p #\l #\a #\c #\i #\a #\n #\Space)
         DISSYM) 
(DEFPROP $LAPLACIAN MSIZE-PREFIX GRIND) 
(DEFPROP $LAPLACIAN 142. RBP) 
(DEFPROP $LAPLACIAN PARSE-PREFIX NUD) 
(DEFPROP %LAPLACIAN DIMENSION-PREFIX DIMENSION) 
(DEFPROP %LAPLACIAN (#\l #\a #\p #\l #\a #\c #\i #\a #\n #\Space)
         DISSYM) 
(DEFPROP %LAPLACIAN $LAPLACIAN NOUN) 
(DEFPROP $ORDER SIMPARGS1 OPERATORS) 
(ADD2LNC '$ORDER $PROPS) 
(DEFPROP $ORDER T OPERS) 
(ADD2LNC '$ORDER $PROPS) 
(DEFPROP $ORDER T $COMMUTATIVE) 
(ADD2LNC '$ORDER $PROPS) 
(RESTORE-FACTS '((($KIND) $ORDER $COMMUTATIVE))) 
(ADD2LNC '$ORDER $PROPS) 
(DEFPROP $ORDERN SIMPARGS1 OPERATORS) 
(ADD2LNC '$ORDERN $PROPS) 
(DEFPROP $ORDERN T OPERS) 
(ADD2LNC '$ORDERN $PROPS) 
(DEFPROP $ORDERN T $NARY) 
(ADD2LNC '$ORDERN $PROPS) 
(ADD2LNC '$TRIGRULE1 $RULES) 
(MDEFPROP $TRIGRULE1 $DEFRULE $RULETYPE) 
(ADD2LNC '$TRIGRULE1 $PROPS) 
(MDEFPROP $TRIGRULE1
    ((MEQUAL) ((%TAN SIMP) $A)
     ((MTIMES SIMP) ((MEXPT SIMP) ((%COS SIMP) $A) -1.)
      ((%SIN SIMP) $A)))
    $RULE) 
(ADD2LNC '$TRIGRULE1 $PROPS) 
(ADD2LNC '$TRIGRULE2 $RULES) 
(MDEFPROP $TRIGRULE2 $DEFRULE $RULETYPE) 
(ADD2LNC '$TRIGRULE2 $PROPS) 
(MDEFPROP $TRIGRULE2
    ((MEQUAL) ((%SEC SIMP) $A) ((MEXPT SIMP) ((%COS SIMP) $A) -1.))
    $RULE) 
(ADD2LNC '$TRIGRULE2 $PROPS) 
(ADD2LNC '$TRIGRULE3 $RULES) 
(MDEFPROP $TRIGRULE3 $DEFRULE $RULETYPE) 
(ADD2LNC '$TRIGRULE3 $PROPS) 
(MDEFPROP $TRIGRULE3
    ((MEQUAL) ((%CSC SIMP) $A) ((MEXPT SIMP) ((%SIN SIMP) $A) -1.))
    $RULE) 
(ADD2LNC '$TRIGRULE3 $PROPS) 
(ADD2LNC '$TRIGRULE4 $RULES) 
(MDEFPROP $TRIGRULE4 $DEFRULE $RULETYPE) 
(ADD2LNC '$TRIGRULE4 $PROPS) 
(MDEFPROP $TRIGRULE4
    ((MEQUAL) ((%COT SIMP) $A)
     ((MTIMES SIMP) ((%COS SIMP) $A)
      ((MEXPT SIMP) ((%SIN SIMP) $A) -1.)))
    $RULE) 
(ADD2LNC '$TRIGRULE4 $PROPS) 
(ADD2LNC '$HTRIGRULE1 $RULES) 
(MDEFPROP $HTRIGRULE1 $DEFRULE $RULETYPE) 
(ADD2LNC '$HTRIGRULE1 $PROPS) 
(MDEFPROP $HTRIGRULE1
    ((MEQUAL) ((%TANH SIMP) $A)
     ((MTIMES SIMP) ((MEXPT SIMP) ((%COSH SIMP) $A) -1.)
      ((%SINH SIMP) $A)))
    $RULE) 
(ADD2LNC '$HTRIGRULE1 $PROPS) 
(ADD2LNC '$HTRIGRULE2 $RULES) 
(MDEFPROP $HTRIGRULE2 $DEFRULE $RULETYPE) 
(ADD2LNC '$HTRIGRULE2 $PROPS) 
(MDEFPROP $HTRIGRULE2
    ((MEQUAL) ((%SECH SIMP) $A) ((MEXPT SIMP) ((%COSH SIMP) $A) -1.))
    $RULE) 
(ADD2LNC '$HTRIGRULE2 $PROPS) 
(ADD2LNC '$HTRIGRULE3 $RULES) 
(MDEFPROP $HTRIGRULE3 $DEFRULE $RULETYPE) 
(ADD2LNC '$HTRIGRULE3 $PROPS) 
(MDEFPROP $HTRIGRULE3
    ((MEQUAL) ((%CSCH SIMP) $A) ((MEXPT SIMP) ((%SINH SIMP) $A) -1.))
    $RULE) 
(ADD2LNC '$HTRIGRULE3 $PROPS) 
(ADD2LNC '$HTRIGRULE4 $RULES) 
(MDEFPROP $HTRIGRULE4 $DEFRULE $RULETYPE) 
(ADD2LNC '$HTRIGRULE4 $PROPS) 
(MDEFPROP $HTRIGRULE4
    ((MEQUAL) ((%COTH SIMP) $A)
     ((MTIMES SIMP) ((%COSH SIMP) $A)
      ((MEXPT SIMP) ((%SINH SIMP) $A) -1.)))
    $RULE) 
(ADD2LNC '$HTRIGRULE4 $PROPS) 
(ADD2LNC '.RULE1 $RULES) 
(MDEFPROP .RULE1
    ((MEQUAL) ((MNCTIMES SIMP) (($~ SIMP) $ETRUE $TTRUE) $VTRUE)
     ((MNCTIMES SIMP) $ETRUE (($~ SIMP) $TTRUE $VTRUE)))
    $RULE) 
(ADD2LNC '.RULE1 $PROPS) 
(MDEFPROP .RULE1 MNCTIMES RULEOF) 
(ADD2LNC '.RULE1 $PROPS) 
(DEFPROP MNCTIMES .RULE1 OPERATORS) 
(MDEFPROP MNCTIMES (.RULE1 SIMPNCT) OLDRULES) 
(ADD2LNC 'MNCTIMES $PROPS) 
(MDEFPROP MNCTIMES 2. RULENUM) 
(ADD2LNC 'MNCTIMES $PROPS) 
(ADD2LNC '$VECTORPOTENTIALRULE1 $RULES) 
(MDEFPROP $VECTORPOTENTIALRULE1
    ((MEQUAL) (($VECTORPOTENTIAL SIMP) $ETRUE $TTRUE)
     ((MPROGN SIMP) (($SCALEFACTORS SIMP) $TTRUE)
      (($VPOT SIMP) $ETRUE)))
    $RULE) 
(ADD2LNC '$VECTORPOTENTIALRULE1 $PROPS) 
(MDEFPROP $VECTORPOTENTIALRULE1 $VECTORPOTENTIAL RULEOF) 
(ADD2LNC '$VECTORPOTENTIALRULE1 $PROPS) 
(DEFPROP $VECTORPOTENTIAL $VECTORPOTENTIALRULE2 OPERATORS) 
(MDEFPROP $VECTORPOTENTIAL
    ($VECTORPOTENTIALRULE2 $VECTORPOTENTIALRULE1 NIL) OLDRULES) 
(ADD2LNC '$VECTORPOTENTIAL $PROPS) 
(MDEFPROP $VECTORPOTENTIAL 3. RULENUM) 
(ADD2LNC '$VECTORPOTENTIAL $PROPS) 
(ADD2LNC '$VECTORPOTENTIALRULE2 $RULES) 
(MDEFPROP $VECTORPOTENTIALRULE2
    ((MEQUAL) (($VECTORPOTENTIAL SIMP) $ETRUE) (($VPOT SIMP) $ETRUE))
    $RULE) 
(ADD2LNC '$VECTORPOTENTIALRULE2 $PROPS) 
(MDEFPROP $VECTORPOTENTIALRULE2 $VECTORPOTENTIAL RULEOF) 
(ADD2LNC '$VECTORPOTENTIALRULE2 $PROPS) 
(ADD2LNC '$EXPRESSRULE1 $RULES) 
(MDEFPROP $EXPRESSRULE1
    ((MEQUAL) (($EXPRESS SIMP) $ETRUE) (($EXPRESS1 SIMP) $ETRUE))
    $RULE) 
(ADD2LNC '$EXPRESSRULE1 $PROPS) 
(MDEFPROP $EXPRESSRULE1 $EXPRESS RULEOF) 
(ADD2LNC '$EXPRESSRULE1 $PROPS) 
(DEFPROP $EXPRESS $EXPRESSRULE2 OPERATORS) 
(MDEFPROP $EXPRESS ($EXPRESSRULE2 $EXPRESSRULE1 NIL) OLDRULES) 
(ADD2LNC '$EXPRESS $PROPS) 
(MDEFPROP $EXPRESS 3. RULENUM) 
(ADD2LNC '$EXPRESS $PROPS) 
(ADD2LNC '$EXPRESSRULE2 $RULES) 
(MDEFPROP $EXPRESSRULE2
    ((MEQUAL) (($EXPRESS SIMP) $ETRUE $TTRUE)
     ((MPROGN SIMP) (($SCALEFACTORS SIMP) $TTRUE)
      (($EXPRESS1 SIMP) $ETRUE)))
    $RULE) 
(ADD2LNC '$EXPRESSRULE2 $PROPS) 
(MDEFPROP $EXPRESSRULE2 $EXPRESS RULEOF) 
(ADD2LNC '$EXPRESSRULE2 $PROPS) 
(ADD2LNC '$POTENTIALRULE1 $RULES) 
(MDEFPROP $POTENTIALRULE1
    ((MEQUAL) (($POTENTIAL SIMP) $ETRUE $TTRUE)
     ((MPROGN SIMP) (($SCALEFACTORS SIMP) $TTRUE)
      (($POTENTIAL1 SIMP) $ETRUE)))
    $RULE) 
(ADD2LNC '$POTENTIALRULE1 $PROPS) 
(MDEFPROP $POTENTIALRULE1 $POTENTIAL RULEOF) 
(ADD2LNC '$POTENTIALRULE1 $PROPS) 
(DEFPROP $POTENTIAL $POTENTIALRULE2 OPERATORS) 
(MDEFPROP $POTENTIAL ($POTENTIALRULE2 $POTENTIALRULE1 NIL) OLDRULES) 
(ADD2LNC '$POTENTIAL $PROPS) 
(MDEFPROP $POTENTIAL 3. RULENUM) 
(ADD2LNC '$POTENTIAL $PROPS) 
(ADD2LNC '$POTENTIALRULE2 $RULES) 
(MDEFPROP $POTENTIALRULE2
    ((MEQUAL) (($POTENTIAL SIMP) $ETRUE) (($POTENTIAL1 SIMP) $ETRUE))
    $RULE) 
(ADD2LNC '$POTENTIALRULE2 $PROPS) 
(MDEFPROP $POTENTIALRULE2 $POTENTIAL RULEOF) 
(ADD2LNC '$POTENTIALRULE2 $PROPS) 
(SETQ $LINENUM 66.) 
(SETQ *ALPHABET* (NCONC '(#\_ #\%) *ALPHABET*)) 
(DSKSETQ $CONTEXT '$INITIAL) 
(RESTORE-FACTS '((($KIND) $ORDER $COMMUTATIVE))) 